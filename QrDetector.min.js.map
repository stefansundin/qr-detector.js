{"version":3,"file":"QrDetector.min.js","mappings":"sEAAA,MAAMA,EACFC,YAAYC,EAAMC,GACdC,KAAKD,MAAQA,EACbC,KAAKC,OAASH,EAAKI,OAASH,EAC5BC,KAAKF,KAAOA,CAChB,CACAK,mBAAmBJ,EAAOE,GACtB,OAAO,IAAIL,EAAU,IAAIQ,kBAAkBL,EAAQE,GAASF,EAChE,CACAM,IAAIC,EAAGC,GACH,QAAID,EAAI,GAAKA,GAAKN,KAAKD,OAASQ,EAAI,GAAKA,GAAKP,KAAKC,SAG1CD,KAAKF,KAAKS,EAAIP,KAAKD,MAAQO,GACxC,CACAE,IAAIF,EAAGC,EAAGE,GACNT,KAAKF,KAAKS,EAAIP,KAAKD,MAAQO,GAAKG,EAAI,EAAI,CAC5C,CACAC,UAAUC,EAAMC,EAAKb,EAAOE,EAAQQ,GAChC,IAAK,IAAIF,EAAIK,EAAKL,EAAIK,EAAMX,EAAQM,IAChC,IAAK,IAAID,EAAIK,EAAML,EAAIK,EAAOZ,EAAOO,IACjCN,KAAKQ,IAAIF,EAAGC,IAAKE,EAG7B,EAKJ,SAASI,EAAWC,EAAOC,EAAKC,GAC5B,OAAOF,EAAQC,EAAMA,EAAMD,EAAQE,EAAMA,EAAMF,CACnD,CAEA,MAAMG,EACFpB,YAAYE,EAAOE,EAAQiB,GACvBlB,KAAKD,MAAQA,EACb,MAAMoB,EAAapB,EAAQE,EAC3B,GAAIiB,GAAUA,EAAOhB,SAAWiB,EAC5B,MAAM,IAAIC,MAAM,qBAEpBpB,KAAKF,KAAOoB,GAAU,IAAId,kBAAkBe,EAChD,CACAd,IAAIC,EAAGC,GACH,OAAOP,KAAKF,KAAKS,EAAIP,KAAKD,MAAQO,EACtC,CACAE,IAAIF,EAAGC,EAAGO,GACNd,KAAKF,KAAKS,EAAIP,KAAKD,MAAQO,GAAKQ,CACpC,EAgJJ,MAAMO,EACFxB,YAAYyB,GACRtB,KAAKuB,WAAa,EAClBvB,KAAKwB,UAAY,EACjBxB,KAAKsB,MAAQA,CACjB,CACAG,SAASC,GACL,GAAIA,EAAU,GAAKA,EAAU,IAAMA,EAAU1B,KAAK2B,YAC9C,MAAM,IAAIP,MAAM,eAAiBM,EAAQE,WAAa,SAE1D,IAAIC,EAAS,EAEb,GAAI7B,KAAKwB,UAAY,EAAG,CACpB,MAAMM,EAAW,EAAI9B,KAAKwB,UACpBO,EAASL,EAAUI,EAAWJ,EAAUI,EACxCE,EAAgBF,EAAWC,EAC3BE,EAAQ,KAAS,EAAIF,GAAYC,EACvCH,GAAU7B,KAAKsB,MAAMtB,KAAKuB,YAAcU,IAASD,EACjDN,GAAWK,EACX/B,KAAKwB,WAAaO,EACK,IAAnB/B,KAAKwB,YACLxB,KAAKwB,UAAY,EACjBxB,KAAKuB,aAEb,CAEA,GAAIG,EAAU,EAAG,CACb,KAAOA,GAAW,GACdG,EAAUA,GAAU,EAAoC,IAA9B7B,KAAKsB,MAAMtB,KAAKuB,YAC1CvB,KAAKuB,aACLG,GAAW,EAGf,GAAIA,EAAU,EAAG,CACb,MAAMM,EAAgB,EAAIN,EACpBO,EAAQ,KAAQD,GAAkBA,EACxCH,EAAUA,GAAUH,GAAa1B,KAAKsB,MAAMtB,KAAKuB,YAAcU,IAASD,EACxEhC,KAAKwB,WAAaE,CACtB,CACJ,CACA,OAAOG,CACX,CACAF,YACI,OAAO,GAAK3B,KAAKsB,MAAMpB,OAASF,KAAKuB,YAAcvB,KAAKwB,SAC5D,EAIJ,IAAIU,EASAC,EAYJ,SAASC,EAAcC,EAAQC,GAC3B,MAAMhB,EAAQ,GACd,IAAIiB,EAAO,GACX,MAAMC,EAAqB,CAAC,GAAI,GAAI,IAAIF,GACxC,IAAIpC,EAASmC,EAAOZ,SAASe,GAE7B,KAAOtC,GAAU,GAAG,CAChB,MAAMuC,EAAMJ,EAAOZ,SAAS,IAC5B,GAAIgB,GAAO,IACP,MAAM,IAAIrB,MAAM,mCAEpB,MAAMsB,EAAIC,KAAKC,MAAMH,EAAM,KACrBI,EAAIF,KAAKC,MAAMH,EAAM,IAAM,GAC3BK,EAAIL,EAAM,GAChBnB,EAAMyB,KAAK,GAAKL,EAAG,GAAKG,EAAG,GAAKC,GAChCP,GAAQG,EAAEd,WAAaiB,EAAEjB,WAAakB,EAAElB,WACxC1B,GAAU,CACd,CAEA,GAAe,IAAXA,EAAc,CACd,MAAMuC,EAAMJ,EAAOZ,SAAS,GAC5B,GAAIgB,GAAO,IACP,MAAM,IAAIrB,MAAM,kCAEpB,MAAMsB,EAAIC,KAAKC,MAAMH,EAAM,IACrBI,EAAIJ,EAAM,GAChBnB,EAAMyB,KAAK,GAAKL,EAAG,GAAKG,GACxBN,GAAQG,EAAEd,WAAaiB,EAAEjB,UAC7B,MACK,GAAe,IAAX1B,EAAc,CACnB,MAAMuC,EAAMJ,EAAOZ,SAAS,GAC5B,GAAIgB,GAAO,GACP,MAAM,IAAIrB,MAAM,iCAEpBE,EAAMyB,KAAK,GAAKN,GAChBF,GAAQE,EAAIb,UAChB,CACA,MAAO,CAAEN,QAAOiB,OACpB,EA1DA,SAAWL,GACPA,EAAc,QAAI,UAClBA,EAAmB,aAAI,eACvBA,EAAW,KAAI,OACfA,EAAY,MAAI,QAChBA,EAAU,IAAI,MACdA,EAAuB,iBAAI,kBAC9B,CAPD,CAOGA,IAASA,EAAO,CAAC,IAEpB,SAAWC,GACPA,EAASA,EAAqB,WAAI,GAAK,aACvCA,EAASA,EAAkB,QAAI,GAAK,UACpCA,EAASA,EAAuB,aAAI,GAAK,eACzCA,EAASA,EAAe,KAAI,GAAK,OACjCA,EAASA,EAAgB,MAAI,GAAK,QAClCA,EAASA,EAAc,IAAI,GAAK,MAChCA,EAASA,EAA2B,iBAAI,GAAK,kBAGhD,CAVD,CAUGA,IAAaA,EAAW,CAAC,IAwC5B,MAAMa,EAA6B,CAC/B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE5C,SAASC,EAAmBZ,EAAQC,GAChC,MAAMhB,EAAQ,GACd,IAAIiB,EAAO,GACX,MAAMC,EAAqB,CAAC,EAAG,GAAI,IAAIF,GACvC,IAAIpC,EAASmC,EAAOZ,SAASe,GAC7B,KAAOtC,GAAU,GAAG,CAChB,MAAMO,EAAI4B,EAAOZ,SAAS,IACpBiB,EAAIC,KAAKC,MAAMnC,EAAI,IACnBoC,EAAIpC,EAAI,GACda,EAAMyB,KAAKC,EAA2BN,GAAGQ,WAAW,GAAIF,EAA2BH,GAAGK,WAAW,IACjGX,GAAQS,EAA2BN,GAAKM,EAA2BH,GACnE3C,GAAU,CACd,CACA,GAAe,IAAXA,EAAc,CACd,MAAMwC,EAAIL,EAAOZ,SAAS,GAC1BH,EAAMyB,KAAKC,EAA2BN,GAAGQ,WAAW,IACpDX,GAAQS,EAA2BN,EACvC,CACA,MAAO,CAAEpB,QAAOiB,OACpB,CACA,SAASY,EAAWd,EAAQC,GACxB,MAAMhB,EAAQ,GACd,IAAIiB,EAAO,GACX,MAAMC,EAAqB,CAAC,EAAG,GAAI,IAAIF,GACjCpC,EAASmC,EAAOZ,SAASe,GAC/B,IAAK,IAAIY,EAAI,EAAGA,EAAIlD,EAAQkD,IAAK,CAC7B,MAAMP,EAAIR,EAAOZ,SAAS,GAC1BH,EAAMyB,KAAKF,EACf,CACA,IACIN,GAAQc,mBAAmB/B,EAAMgC,KAAIT,GAAK,KAAK,IAAMA,EAAEjB,SAAS,KAAK2B,QAAQ,OAAMC,KAAK,IAI5F,CAFA,MAAOC,GAEP,CACA,MAAO,CAAEnC,QAAOiB,OACpB,CACA,SAASmB,EAAYrB,EAAQC,GACzB,MAAMhB,EAAQ,GACRkB,EAAqB,CAAC,EAAG,GAAI,IAAIF,GACjCpC,EAASmC,EAAOZ,SAASe,GAC/B,IAAK,IAAIY,EAAI,EAAGA,EAAIlD,EAAQkD,IAAK,CAC7B,MAAMO,EAAItB,EAAOZ,SAAS,IAC1B,IAAIqB,EAAKH,KAAKC,MAAMe,EAAI,MAAS,EAAMA,EAAI,IAEvCb,GADAA,EAAI,KACC,MAGA,MAETxB,EAAMyB,KAAKD,GAAK,EAAO,IAAJA,EACvB,CAEA,MAAO,CAAExB,QAAOiB,KADH,IAAIqB,YAAY,aAAaC,OAAOC,WAAWC,KAAKzC,IAErE,CAgGA,MAAM0C,EACFnE,YAAYoE,EAAOC,GACf,GAA4B,IAAxBA,EAAahE,OACb,MAAM,IAAIkB,MAAM,oBAEpBpB,KAAKiE,MAAQA,EACb,MAAME,EAAqBD,EAAahE,OACxC,GAAIiE,EAAqB,GAAyB,IAApBD,EAAa,GAAU,CAEjD,IAAIE,EAAe,EACnB,KAAOA,EAAeD,GAAqD,IAA/BD,EAAaE,IACrDA,IAEJ,GAAIA,IAAiBD,EACjBnE,KAAKkE,aAAeD,EAAMI,KAAKH,iBAE9B,CACDlE,KAAKkE,aAAe,IAAI9D,kBAAkB+D,EAAqBC,GAC/D,IAAK,IAAIhB,EAAI,EAAGA,EAAIpD,KAAKkE,aAAahE,OAAQkD,IAC1CpD,KAAKkE,aAAad,GAAKc,EAAaE,EAAehB,EAE3D,CACJ,MAEIpD,KAAKkE,aAAeA,CAE5B,CACAI,SACI,OAAOtE,KAAKkE,aAAahE,OAAS,CACtC,CACAqE,SACI,OAAgC,IAAzBvE,KAAKkE,aAAa,EAC7B,CACAM,eAAeF,GACX,OAAOtE,KAAKkE,aAAalE,KAAKkE,aAAahE,OAAS,EAAIoE,EAC5D,CACAG,cAAcC,GACV,GAAI1E,KAAKuE,SACL,OAAOG,EAEX,GAAIA,EAAMH,SACN,OAAOvE,KAEX,IAAI2E,EAAsB3E,KAAKkE,aAC3BU,EAAqBF,EAAMR,aAC3BS,EAAoBzE,OAAS0E,EAAmB1E,UAC/CyE,EAAqBC,GAAsB,CAACA,EAAoBD,IAErE,MAAME,EAAU,IAAIzE,kBAAkBwE,EAAmB1E,QACnD4E,EAAaF,EAAmB1E,OAASyE,EAAoBzE,OACnE,IAAK,IAAIkD,EAAI,EAAGA,EAAI0B,EAAY1B,IAC5ByB,EAAQzB,GAAKwB,EAAmBxB,GAEpC,IAAK,IAAIA,EAAI0B,EAAY1B,EAAIwB,EAAmB1E,OAAQkD,IACpDyB,EAAQzB,GAAK2B,EAAgBJ,EAAoBvB,EAAI0B,GAAaF,EAAmBxB,IAEzF,OAAO,IAAIY,EAAchE,KAAKiE,MAAOY,EACzC,CACAG,SAASC,GACL,GAAe,IAAXA,EACA,OAAOjF,KAAKiE,MAAMI,KAEtB,GAAe,IAAXY,EACA,OAAOjF,KAEX,MAAMsC,EAAOtC,KAAKkE,aAAahE,OACzBgF,EAAU,IAAI9E,kBAAkBkC,GACtC,IAAK,IAAIc,EAAI,EAAGA,EAAId,EAAMc,IACtB8B,EAAQ9B,GAAKpD,KAAKiE,MAAMe,SAAShF,KAAKkE,aAAad,GAAI6B,GAE3D,OAAO,IAAIjB,EAAchE,KAAKiE,MAAOiB,EACzC,CACAC,aAAaT,GACT,GAAI1E,KAAKuE,UAAYG,EAAMH,SACvB,OAAOvE,KAAKiE,MAAMI,KAEtB,MAAMe,EAAgBpF,KAAKkE,aACrBmB,EAAUD,EAAclF,OACxBoF,EAAgBZ,EAAMR,aACtBqB,EAAUD,EAAcpF,OACxBgF,EAAU,IAAI9E,kBAAkBiF,EAAUE,EAAU,GAC1D,IAAK,IAAInC,EAAI,EAAGA,EAAIiC,EAASjC,IAAK,CAC9B,MAAMoC,EAASJ,EAAchC,GAC7B,IAAK,IAAIqC,EAAI,EAAGA,EAAIF,EAASE,IACzBP,EAAQ9B,EAAIqC,GAAKV,EAAgBG,EAAQ9B,EAAIqC,GAAIzF,KAAKiE,MAAMe,SAASQ,EAAQF,EAAcG,IAEnG,CACA,OAAO,IAAIzB,EAAchE,KAAKiE,MAAOiB,EACzC,CACAQ,mBAAmBpB,EAAQqB,GACvB,GAAIrB,EAAS,EACT,MAAM,IAAIlD,MAAM,8BAEpB,GAAoB,IAAhBuE,EACA,OAAO3F,KAAKiE,MAAMI,KAEtB,MAAM/B,EAAOtC,KAAKkE,aAAahE,OACzBgF,EAAU,IAAI9E,kBAAkBkC,EAAOgC,GAC7C,IAAK,IAAIlB,EAAI,EAAGA,EAAId,EAAMc,IACtB8B,EAAQ9B,GAAKpD,KAAKiE,MAAMe,SAAShF,KAAKkE,aAAad,GAAIuC,GAE3D,OAAO,IAAI3B,EAAchE,KAAKiE,MAAOiB,EACzC,CACAU,WAAWlD,GACP,IAAIb,EAAS,EACb,GAAU,IAANa,EAEA,OAAO1C,KAAKwE,eAAe,GAE/B,MAAMlC,EAAOtC,KAAKkE,aAAahE,OAC/B,GAAU,IAANwC,EAKA,OAHA1C,KAAKkE,aAAa2B,SAASF,IACvB9D,EAASkD,EAAgBlD,EAAQ8D,EAAY,IAE1C9D,EAEXA,EAAS7B,KAAKkE,aAAa,GAC3B,IAAK,IAAId,EAAI,EAAGA,EAAId,EAAMc,IACtBvB,EAASkD,EAAgB/E,KAAKiE,MAAMe,SAAStC,EAAGb,GAAS7B,KAAKkE,aAAad,IAE/E,OAAOvB,CACX,EAGJ,SAASkD,EAAgBrC,EAAGG,GACxB,OAAOH,EAAIG,CACf,CACA,MAAMiD,EACFjG,YAAYkG,EAAWzD,EAAM0D,GACzBhG,KAAK+F,UAAYA,EACjB/F,KAAKsC,KAAOA,EACZtC,KAAKiG,cAAgBD,EACrBhG,KAAKkG,SAAW,IAAIC,MAAMnG,KAAKsC,MAC/BtC,KAAKoG,SAAW,IAAID,MAAMnG,KAAKsC,MAC/B,IAAIhC,EAAI,EACR,IAAK,IAAI8C,EAAI,EAAGA,EAAIpD,KAAKsC,KAAMc,IAC3BpD,KAAKkG,SAAS9C,GAAK9C,EACnBA,GAAQ,EACJA,GAAKN,KAAKsC,OACVhC,GAAKA,EAAIN,KAAK+F,WAAc/F,KAAKsC,KAAO,GAGhD,IAAK,IAAIc,EAAI,EAAGA,EAAIpD,KAAKsC,KAAO,EAAGc,IAC/BpD,KAAKoG,SAASpG,KAAKkG,SAAS9C,IAAMA,EAEtCpD,KAAKqE,KAAO,IAAIL,EAAchE,KAAMI,kBAAkB2D,KAAK,CAAC,KAC5D/D,KAAKqG,IAAM,IAAIrC,EAAchE,KAAMI,kBAAkB2D,KAAK,CAAC,IAC/D,CACAiB,SAAStC,EAAGG,GACR,OAAU,IAANH,GAAiB,IAANG,EACJ,EAEJ7C,KAAKkG,UAAUlG,KAAKoG,SAAS1D,GAAK1C,KAAKoG,SAASvD,KAAO7C,KAAKsC,KAAO,GAC9E,CACAgE,QAAQ5D,GACJ,GAAU,IAANA,EACA,MAAM,IAAItB,MAAM,kBAEpB,OAAOpB,KAAKkG,SAASlG,KAAKsC,KAAOtC,KAAKoG,SAAS1D,GAAK,EACxD,CACA6D,cAAcjC,EAAQqB,GAClB,GAAIrB,EAAS,EACT,MAAM,IAAIlD,MAAM,uCAEpB,GAAoB,IAAhBuE,EACA,OAAO3F,KAAKqE,KAEhB,MAAMH,EAAe,IAAI9D,kBAAkBkE,EAAS,GAEpD,OADAJ,EAAa,GAAKyB,EACX,IAAI3B,EAAchE,KAAMkE,EACnC,CACAsC,IAAI9D,GACA,GAAU,IAANA,EACA,MAAM,IAAItB,MAAM,qBAEpB,OAAOpB,KAAKoG,SAAS1D,EACzB,CACA+D,IAAI/D,GACA,OAAO1C,KAAKkG,SAASxD,EACzB,EAmFJ,SAASgE,EAASpF,EAAOqF,GACrB,MAAMC,EAAc,IAAIxG,kBAAkBkB,EAAMpB,QAChD0G,EAAYpG,IAAIc,GAChB,MAAM2C,EAAQ,IAAI6B,EAAU,IAAQ,IAAK,GACnCe,EAAO,IAAI7C,EAAcC,EAAO2C,GAChCE,EAAuB,IAAI1G,kBAAkBuG,GACnD,IAAII,GAAQ,EACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAMK,IAAK,CAC3B,MAAMC,EAAaJ,EAAKjB,WAAW3B,EAAMwC,IAAIO,EAAI/C,EAAMgC,gBACvDa,EAAqBA,EAAqB5G,OAAS,EAAI8G,GAAKC,EACzC,IAAfA,IACAF,GAAQ,EAEhB,CACA,IAAKA,EACD,OAAOH,EAEX,MAAMM,EAAW,IAAIlD,EAAcC,EAAO6C,GACpCK,EAlGV,SAA+BlD,EAAOvB,EAAGG,EAAGuE,GAEpC1E,EAAE4B,SAAWzB,EAAEyB,YACd5B,EAAGG,GAAK,CAACA,EAAGH,IAEjB,IAAI2E,EAAQ3E,EACR4E,EAAIzE,EACJ0E,EAAQtD,EAAMI,KACdmD,EAAIvD,EAAMoC,IAEd,KAAOiB,EAAEhD,UAAY8C,EAAI,GAAG,CACxB,MAAMK,EAAYJ,EACZK,EAAYH,EAIlB,GAHAF,EAAQC,EACRC,EAAQC,EAEJH,EAAM9C,SAEN,OAAO,KAEX+C,EAAIG,EACJ,IAAIE,EAAI1D,EAAMI,KACd,MAAMuD,EAAyBP,EAAM7C,eAAe6C,EAAM/C,UACpDuD,EAAa5D,EAAMqC,QAAQsB,GACjC,KAAON,EAAEhD,UAAY+C,EAAM/C,WAAagD,EAAE/C,UAAU,CAChD,MAAMuD,EAAaR,EAAEhD,SAAW+C,EAAM/C,SAChCyD,EAAQ9D,EAAMe,SAASsC,EAAE9C,eAAe8C,EAAEhD,UAAWuD,GAC3DF,EAAIA,EAAElD,cAAcR,EAAMsC,cAAcuB,EAAYC,IACpDT,EAAIA,EAAE7C,cAAc4C,EAAM3B,mBAAmBoC,EAAYC,GAC7D,CAEA,GADAP,EAAIG,EAAExC,aAAaoC,GAAO9C,cAAciD,GACpCJ,EAAEhD,UAAY+C,EAAM/C,SACpB,OAAO,IAEf,CACA,MAAM0D,EAAmBR,EAAEhD,eAAe,GAC1C,GAAyB,IAArBwD,EACA,OAAO,KAEX,MAAM1B,EAAUrC,EAAMqC,QAAQ0B,GAC9B,MAAO,CAACR,EAAExC,SAASsB,GAAUgB,EAAEtC,SAASsB,GAC5C,CAyDuB2B,CAAsBhE,EAAOA,EAAMsC,cAAcI,EAAM,GAAIO,EAAUP,GACxF,GAAmB,OAAfQ,EACA,OAAO,KAEX,MAAMe,EA5DV,SAA4BjE,EAAOkE,GAE/B,MAAMC,EAAYD,EAAa7D,SAC/B,GAAkB,IAAd8D,EACA,MAAO,CAACD,EAAa3D,eAAe,IAExC,MAAM3C,EAAS,IAAIsE,MAAMiC,GACzB,IAAIC,EAAa,EACjB,IAAK,IAAIjF,EAAI,EAAGA,EAAIa,EAAM3B,MAAQ+F,EAAaD,EAAWhF,IACnB,IAA/B+E,EAAavC,WAAWxC,KACxBvB,EAAOwG,GAAcpE,EAAMqC,QAAQlD,GACnCiF,KAGR,OAAIA,IAAeD,EACR,KAEJvG,CACX,CA0C2ByG,CAAmBrE,EAAOkD,EAAW,IAC5D,GAAsB,MAAlBe,EACA,OAAO,KAEX,MAAMK,EA7CV,SAA6BtE,EAAOuE,EAAgBN,GAEhD,MAAMlB,EAAIkB,EAAehI,OACnB2B,EAAS,IAAIsE,MAAMa,GACzB,IAAK,IAAI5D,EAAI,EAAGA,EAAI4D,EAAG5D,IAAK,CACxB,MAAMqF,EAAYxE,EAAMqC,QAAQ4B,EAAe9E,IAC/C,IAAIsF,EAAc,EAClB,IAAK,IAAIjD,EAAI,EAAGA,EAAIuB,EAAGvB,IACfrC,IAAMqC,IACNiD,EAAczE,EAAMe,SAAS0D,EAAa3D,EAAgB,EAAGd,EAAMe,SAASkD,EAAezC,GAAIgD,MAGvG5G,EAAOuB,GAAKa,EAAMe,SAASwD,EAAe5C,WAAW6C,GAAYxE,EAAMqC,QAAQoC,IACnD,IAAxBzE,EAAMgC,gBACNpE,EAAOuB,GAAKa,EAAMe,SAASnD,EAAOuB,GAAIqF,GAE9C,CACA,OAAO5G,CACX,CA2B4B8G,CAAoB1E,EAAOkD,EAAW,GAAIe,GAClE,IAAK,IAAI9E,EAAI,EAAGA,EAAI8E,EAAehI,OAAQkD,IAAK,CAC5C,MAAMwF,EAAWhC,EAAY1G,OAAS,EAAI+D,EAAMuC,IAAI0B,EAAe9E,IACnE,GAAIwF,EAAW,EACX,OAAO,KAEXhC,EAAYgC,GAAY7D,EAAgB6B,EAAYgC,GAAWL,EAAgBnF,GACnF,CACA,OAAOwD,CACX,CAEA,MAAMiC,EAAW,CACb,CACIC,SAAU,KACVC,cAAe,EACfC,wBAAyB,GACzBC,sBAAuB,CACnB,CACIC,oBAAqB,EACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,OAI9D,CACIP,SAAU,KACVC,cAAe,EACfC,wBAAyB,CAAC,EAAG,IAC7BC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,QAI9D,CACIP,SAAU,KACVC,cAAe,EACfC,wBAAyB,CAAC,EAAG,IAC7BC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,QAI9D,CACIP,SAAU,KACVC,cAAe,EACfC,wBAAyB,CAAC,EAAG,IAC7BC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,OAI9D,CACIP,SAAU,KACVC,cAAe,EACfC,wBAAyB,CAAC,EAAG,IAC7BC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,OAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,KACVC,cAAe,EACfC,wBAAyB,CAAC,EAAG,IAC7BC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,QAI9D,CACIP,SAAU,MACVC,cAAe,EACfC,wBAAyB,CAAC,EAAG,GAAI,IACjCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,MACVC,cAAe,EACfC,wBAAyB,CAAC,EAAG,GAAI,IACjCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,MACVC,cAAe,EACfC,wBAAyB,CAAC,EAAG,GAAI,IACjCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,OAEtD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,IACjCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,IACjCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,MAEtD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,IACjCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,IACjCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,EAAGC,sBAAuB,OAEtD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,IACrCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,IACrCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,IACrCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,IACrCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,IACrCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,IACrCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,IACrCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IACzCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,GAAIC,sBAAuB,MAEvD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IACzCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,GAAIC,sBAAuB,MAEvD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,GAAIC,sBAAuB,QAI/D,CACIP,SAAU,MACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,KACzCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,KACzCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,KACzCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,KACzCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,KACxC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,KACzCC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KAC7CC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,GAAIC,sBAAuB,OAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9CC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9CC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,GAAIC,sBAAuB,OAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9CC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,KACxC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9CC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CAAC,CAAEC,UAAW,GAAIC,sBAAuB,OAEvD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9CC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,KACxC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9CC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,KACxC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,QAKvD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KACnDC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,KACxC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KACnDC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,GAAIC,sBAAuB,OAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,IACvC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KACnDC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,KACxC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KACnDC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,EAAGC,sBAAuB,KACvC,CAAED,UAAW,GAAIC,sBAAuB,OAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KACnDC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,KACxC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,EAAGC,sBAAuB,MAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,QAKxD,CACIP,SAAU,OACVC,cAAe,GACfC,wBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KACnDC,sBAAuB,CACnB,CACIC,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,KACxC,CAAED,UAAW,EAAGC,sBAAuB,OAG/C,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,MAGhD,CACIH,oBAAqB,GACrBC,SAAU,CACN,CAAEC,UAAW,GAAIC,sBAAuB,IACxC,CAAED,UAAW,GAAIC,sBAAuB,SAQ5D,SAASC,EAAiBhJ,EAAGC,GACzB,IAAIgJ,EAAIjJ,EAAIC,EACRiJ,EAAW,EACf,KAAOD,GACHC,IACAD,GAAKA,EAAI,EAEb,OAAOC,CACX,CACA,SAASC,EAAQC,EAAKC,GAClB,OAAQA,GAAQ,EAAKD,CACzB,CAEA,MAAME,EAAoB,CACtB,CAAEC,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,KAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,KAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,KAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,KAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,KAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,IAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,KAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,KAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,KAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,KAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,IACjE,CAAEH,KAAM,MAAQC,WAAY,CAAEC,qBAAsB,EAAGC,SAAU,KAE/DC,EAAa,CACdC,IAAQA,EAAE3J,EAAI2J,EAAE5J,GAAK,GAAO,EAC5B4J,GAAOA,EAAE3J,EAAI,GAAO,EACpB2J,GAAMA,EAAE5J,EAAI,GAAM,EAClB4J,IAAOA,EAAE3J,EAAI2J,EAAE5J,GAAK,GAAM,EAC1B4J,IAAOvH,KAAKC,MAAMsH,EAAE3J,EAAI,GAAKoC,KAAKC,MAAMsH,EAAE5J,EAAI,IAAM,GAAM,EAC1D4J,GAAQA,EAAE5J,EAAI4J,EAAE3J,EAAK,EAAO2J,EAAE5J,EAAI4J,EAAE3J,EAAK,GAAO,EAChD2J,IAAUA,EAAE3J,EAAI2J,EAAE5J,EAAK,EAAM4J,EAAE3J,EAAI2J,EAAE5J,EAAK,GAAK,GAAO,EACtD4J,KAAUA,EAAE3J,EAAI2J,EAAE5J,GAAK,EAAM4J,EAAE3J,EAAI2J,EAAE5J,EAAK,GAAK,GAAO,GA0L3D,SAAS6J,EAAaC,GAClB,MAAMC,EA/HV,SAAqBD,GACjB,MAAME,EAAYF,EAAOnK,OACnBsK,EAAqB5H,KAAKC,OAAO0H,EAAY,IAAM,GACzD,GAAIC,GAAsB,EACtB,OAAO1B,EAAS0B,EAAqB,GAEzC,IAAIC,EAAsB,EAC1B,IAAK,IAAIjK,EAAI,EAAGA,GAAK,EAAGA,IACpB,IAAK,IAAID,EAAIgK,EAAY,EAAGhK,GAAKgK,EAAY,GAAIhK,IAC7CkK,EAAsBf,EAAQW,EAAO/J,IAAIC,EAAGC,GAAIiK,GAGxD,IAAIC,EAAwB,EAC5B,IAAK,IAAInK,EAAI,EAAGA,GAAK,EAAGA,IACpB,IAAK,IAAIC,EAAI+J,EAAY,EAAG/J,GAAK+J,EAAY,GAAI/J,IAC7CkK,EAAwBhB,EAAQW,EAAO/J,IAAIC,EAAGC,GAAIkK,GAG1D,IACIC,EADAC,EAAiBC,IAErB,IAAK,MAAMP,KAAWxB,EAAU,CAC5B,GAAIwB,EAAQvB,WAAa0B,GAAuBH,EAAQvB,WAAa2B,EACjE,OAAOJ,EAEX,IAAIQ,EAAavB,EAAiBkB,EAAqBH,EAAQvB,UAC3D+B,EAAaF,IACbD,EAAcL,EACdM,EAAiBE,GAErBA,EAAavB,EAAiBmB,EAAuBJ,EAAQvB,UACzD+B,EAAaF,IACbD,EAAcL,EACdM,EAAiBE,EAEzB,CAGA,OAAIF,GAAkB,EACXD,OADX,CAGJ,CAuFoBI,CAAYV,GAC5B,IAAKC,EACD,OAAO,KAEX,MAAMP,EA1FV,SAA+BM,GAC3B,IAAIW,EAAwB,EAC5B,IAAK,IAAIzK,EAAI,EAAGA,GAAK,EAAGA,IACV,IAANA,IACAyK,EAAwBtB,EAAQW,EAAO/J,IAAIC,EAAG,GAAIyK,IAG1D,IAAK,IAAIxK,EAAI,EAAGA,GAAK,EAAGA,IACV,IAANA,IACAwK,EAAwBtB,EAAQW,EAAO/J,IAAI,EAAGE,GAAIwK,IAG1D,MAAMT,EAAYF,EAAOnK,OACzB,IAAI+K,EAAoC,EACxC,IAAK,IAAIzK,EAAI+J,EAAY,EAAG/J,GAAK+J,EAAY,EAAG/J,IAC5CyK,EAAoCvB,EAAQW,EAAO/J,IAAI,EAAGE,GAAIyK,GAElE,IAAK,IAAI1K,EAAIgK,EAAY,EAAGhK,EAAIgK,EAAWhK,IACvC0K,EAAoCvB,EAAQW,EAAO/J,IAAIC,EAAG,GAAI0K,GAElE,IAAIL,EAAiBC,IACjBK,EAAiB,KACrB,IAAK,MAAM,KAAEpB,EAAI,WAAEC,KAAgBF,EAAmB,CAClD,GAAIC,IAASkB,GAAyBlB,IAASmB,EAC3C,OAAOlB,EAEX,IAAIe,EAAavB,EAAiByB,EAAuBlB,GACrDgB,EAAaF,IACbM,EAAiBnB,EACjBa,EAAiBE,GAEjBE,IAA0BC,IAC1BH,EAAavB,EAAiB0B,EAAmCnB,GAC7DgB,EAAaF,IACbM,EAAiBnB,EACjBa,EAAiBE,GAG7B,CAEA,OAAIF,GAAkB,EACXM,EAEJ,IACX,CA8CuBC,CAAsBd,GACzC,IAAKN,EACD,OAAO,KAEX,MACMqB,EAlDV,SAAuBC,EAAWf,EAASgB,GACvC,MAAMC,EAASjB,EAAQpB,sBAAsBoC,GACvCF,EAAa,GACnB,IAAII,EAAiB,EAUrB,GATAD,EAAOnC,SAAStD,SAAQ2F,IACpB,IAAK,IAAIpI,EAAI,EAAGA,EAAIoI,EAAMpC,UAAWhG,IACjC+H,EAAWpI,KAAK,CAAE0I,iBAAkBD,EAAMnC,sBAAuB+B,UAAW,KAC5EG,GAAkBC,EAAMnC,sBAAwBiC,EAAOpC,mBAC3D,IAKAkC,EAAUlL,OAASqL,EACnB,OAAO,KAEXH,EAAYA,EAAUM,MAAM,EAAGH,GAC/B,MAAMI,EAAiBL,EAAOnC,SAAS,GAAGE,sBAE1C,IAAK,IAAIjG,EAAI,EAAGA,EAAIuI,EAAgBvI,IAChC,IAAK,MAAMwI,KAAaT,EACpBS,EAAUR,UAAUrI,KAAKqI,EAAUS,SAI3C,GAAIP,EAAOnC,SAASjJ,OAAS,EAAG,CAC5B,MAAM4L,EAAkBR,EAAOnC,SAAS,GAAGC,UACrC2C,EAAkBT,EAAOnC,SAAS,GAAGC,UAC3C,IAAK,IAAIhG,EAAI,EAAGA,EAAI2I,EAAiB3I,IACjC+H,EAAWW,EAAkB1I,GAAGgI,UAAUrI,KAAKqI,EAAUS,QAEjE,CAEA,KAAOT,EAAUlL,OAAS,GACtB,IAAK,MAAM0L,KAAaT,EACpBS,EAAUR,UAAUrI,KAAKqI,EAAUS,SAG3C,OAAOV,CACX,CAWuBa,CA5KvB,SAAuB5B,EAAQC,EAASP,GACpC,MAAME,EAAWC,EAAWH,EAAWE,UACjCM,EAAYF,EAAOnK,OACnBgM,EAzBV,SAAkC5B,GAC9B,MAAMC,EAAY,GAAK,EAAID,EAAQtB,cAC7BqB,EAASxK,EAAUsM,YAAY5B,EAAWA,GAChDF,EAAO1J,UAAU,EAAG,EAAG,EAAG,GAAG,GAC7B0J,EAAO1J,UAAU4J,EAAY,EAAG,EAAG,EAAG,GAAG,GACzCF,EAAO1J,UAAU,EAAG4J,EAAY,EAAG,EAAG,GAAG,GAEzC,IAAK,MAAMhK,KAAK+J,EAAQrB,wBACpB,IAAK,MAAMzI,KAAK8J,EAAQrB,wBACR,IAAN1I,GAAiB,IAANC,GAAiB,IAAND,GAAWC,IAAM+J,EAAY,GAAKhK,IAAMgK,EAAY,GAAW,IAAN/J,GACjF6J,EAAO1J,UAAUJ,EAAI,EAAGC,EAAI,EAAG,EAAG,GAAG,GAUjD,OANA6J,EAAO1J,UAAU,EAAG,EAAG,EAAG4J,EAAY,IAAI,GAC1CF,EAAO1J,UAAU,EAAG,EAAG4J,EAAY,GAAI,GAAG,GACtCD,EAAQtB,cAAgB,IACxBqB,EAAO1J,UAAU4J,EAAY,GAAI,EAAG,EAAG,GAAG,GAC1CF,EAAO1J,UAAU,EAAG4J,EAAY,GAAI,EAAG,GAAG,IAEvCF,CACX,CAIgC+B,CAAyB9B,GAC/Ce,EAAY,GAClB,IAAIgB,EAAc,EACdC,EAAW,EAEXC,GAAY,EAChB,IAAK,IAAIC,EAAcjC,EAAY,EAAGiC,EAAc,EAAGA,GAAe,EAAG,CACjD,IAAhBA,GACAA,IAEJ,IAAK,IAAInJ,EAAI,EAAGA,EAAIkH,EAAWlH,IAAK,CAChC,MAAM7C,EAAI+L,EAAYhC,EAAY,EAAIlH,EAAIA,EAC1C,IAAK,IAAIoJ,EAAe,EAAGA,EAAe,EAAGA,IAAgB,CACzD,MAAMlM,EAAIiM,EAAcC,EACxB,IAAKP,EAAoB5L,IAAIC,EAAGC,GAAI,CAChC8L,IACA,IAAI3C,EAAMU,EAAO/J,IAAIC,EAAGC,GACpByJ,EAAS,CAAEzJ,IAAGD,QACdoJ,GAAOA,GAEX0C,EAAc3C,EAAQC,EAAK0C,GACV,IAAbC,IACAjB,EAAUrI,KAAKqJ,GACfC,EAAW,EACXD,EAAc,EAEtB,CACJ,CACJ,CACAE,GAAaA,CACjB,CACA,OAAOlB,CACX,CAwIsBqB,CAAcrC,EAAQC,EAASP,GACLO,EAASP,EAAWC,sBAChE,IAAKoB,EACD,OAAO,KAGX,MAAMuB,EAAavB,EAAWwB,QAAO,CAACjK,EAAGG,IAAMH,EAAIG,EAAE4I,kBAAkB,GACjEmB,EAAc,IAAIxM,kBAAkBsM,GAC1C,IAAIG,EAAc,EAClB,IAAK,MAAMjB,KAAaT,EAAY,CAChC,MAAM2B,EAAiBpG,EAASkF,EAAUR,UAAWQ,EAAUR,UAAUlL,OAAS0L,EAAUH,kBAC5F,IAAKqB,EACD,OAAO,KAEX,IAAK,IAAI1J,EAAI,EAAGA,EAAIwI,EAAUH,iBAAkBrI,IAC5CwJ,EAAYC,KAAiBC,EAAe1J,EAEpD,CACA,IACI,OAp7DR,SAAkBtD,EAAMuK,GACpB,MAAMhI,EAAS,IAAIhB,EAAUvB,GAEvBwC,EAAO+H,GAAW,EAAI,EAAIA,GAAW,GAAK,EAAI,EAC9CxI,EAAS,CACXU,KAAM,GACNjB,MAAO,GACPyL,OAAQ,GACR1C,WAEJ,KAAOhI,EAAOV,aAAe,GAAG,CAC5B,MAAMqL,EAAO3K,EAAOZ,SAAS,GAC7B,GAAIuL,IAAS7K,EAAS8K,WAClB,OAAOpL,EAEN,GAAImL,IAAS7K,EAAS+K,IACI,IAAvB7K,EAAOZ,SAAS,GAChBI,EAAOkL,OAAOhK,KAAK,CACfoK,KAAMjL,EAAKgL,IACXE,iBAAkB/K,EAAOZ,SAAS,KAGV,IAAvBY,EAAOZ,SAAS,GACrBI,EAAOkL,OAAOhK,KAAK,CACfoK,KAAMjL,EAAKgL,IACXE,iBAAkB/K,EAAOZ,SAAS,MAGV,IAAvBY,EAAOZ,SAAS,GACrBI,EAAOkL,OAAOhK,KAAK,CACfoK,KAAMjL,EAAKgL,IACXE,iBAAkB/K,EAAOZ,SAAS,MAKtCI,EAAOkL,OAAOhK,KAAK,CACfoK,KAAMjL,EAAKgL,IACXE,kBAAmB,SAI1B,GAAIJ,IAAS7K,EAASkL,QAAS,CAChC,MAAMC,EAAgBlL,EAAcC,EAAQC,GAC5CT,EAAOU,MAAQ+K,EAAc/K,KAC7BV,EAAOP,MAAMyB,QAAQuK,EAAchM,OACnCO,EAAOkL,OAAOhK,KAAK,CACfoK,KAAMjL,EAAKmL,QACX9K,KAAM+K,EAAc/K,MAE5B,MACK,GAAIyK,IAAS7K,EAASoL,aAAc,CACrC,MAAMC,EAAqBvK,EAAmBZ,EAAQC,GACtDT,EAAOU,MAAQiL,EAAmBjL,KAClCV,EAAOP,MAAMyB,QAAQyK,EAAmBlM,OACxCO,EAAOkL,OAAOhK,KAAK,CACfoK,KAAMjL,EAAKqL,aACXhL,KAAMiL,EAAmBjL,MAEjC,MACK,GAAIyK,IAAS7K,EAASsL,KAAM,CAC7B,MAAMC,EAAavK,EAAWd,EAAQC,GACtCT,EAAOU,MAAQmL,EAAWnL,KAC1BV,EAAOP,MAAMyB,QAAQ2K,EAAWpM,OAChCO,EAAOkL,OAAOhK,KAAK,CACfoK,KAAMjL,EAAKuL,KACXnM,MAAOoM,EAAWpM,MAClBiB,KAAMmL,EAAWnL,MAEzB,MACK,GAAIyK,IAAS7K,EAASwL,MAAO,CAC9B,MAAMC,EAAclK,EAAYrB,EAAQC,GACxCT,EAAOU,MAAQqL,EAAYrL,KAC3BV,EAAOP,MAAMyB,QAAQ6K,EAAYtM,OACjCO,EAAOkL,OAAOhK,KAAK,CACfoK,KAAMjL,EAAKyL,MACXrM,MAAOsM,EAAYtM,MACnBiB,KAAMqL,EAAYrL,MAE1B,MACSyK,IAAS7K,EAAS0L,kBACvBhM,EAAOkL,OAAOhK,KAAK,CACfoK,KAAMjL,EAAK2L,iBACXC,gBAAiBzL,EAAOZ,SAAS,GACjCsM,cAAe1L,EAAOZ,SAAS,GAC/BuM,OAAQ3L,EAAOZ,SAAS,IAGpC,CAEA,GAA2B,IAAvBY,EAAOV,aAA6D,IAAxCU,EAAOZ,SAASY,EAAOV,aACnD,OAAOE,CAEf,CAu1DeoM,CAASrB,EAAavC,EAAQtB,cAIzC,CAFA,MAAOtF,GACH,OAAO,IACX,CACJ,CACA,SAASI,EAAOuG,GACZ,GAAc,MAAVA,EACA,OAAO,KAEX,MAAMvI,EAASsI,EAAaC,GAC5B,GAAIvI,EACA,OAAOA,EAGX,IAAK,IAAIvB,EAAI,EAAGA,EAAI8J,EAAOrK,MAAOO,IAC9B,IAAK,IAAIC,EAAID,EAAI,EAAGC,EAAI6J,EAAOnK,OAAQM,IAC/B6J,EAAO/J,IAAIC,EAAGC,KAAO6J,EAAO/J,IAAIE,EAAGD,KACnC8J,EAAO5J,IAAIF,EAAGC,GAAI6J,EAAO/J,IAAIC,EAAGC,IAChC6J,EAAO5J,IAAID,EAAGD,GAAI8J,EAAO/J,IAAIE,EAAGD,KAI5C,OAAO6J,EAAaC,EACxB,CAEA,SAAS8D,EAAsBC,EAAIC,EAAIC,EAAIC,GACvC,MAAMC,EAAMJ,EAAG7N,EAAI8N,EAAG9N,EAAI+N,EAAG/N,EAAIgO,EAAGhO,EAC9BkO,EAAML,EAAG5N,EAAI6N,EAAG7N,EAAI8N,EAAG9N,EAAI+N,EAAG/N,EACpC,GAAY,IAARgO,GAAqB,IAARC,EACb,MAAO,CACHC,IAAKL,EAAG9N,EAAI6N,EAAG7N,EACfoO,IAAKN,EAAG7N,EAAI4N,EAAG5N,EACfoO,IAAK,EACLC,IAAKP,EAAG/N,EAAI8N,EAAG9N,EACfuO,IAAKR,EAAG9N,EAAI6N,EAAG7N,EACfuO,IAAK,EACLC,IAAKZ,EAAG7N,EACR0O,IAAKb,EAAG5N,EACR0O,IAAK,GAGR,CACD,MAAMC,EAAMd,EAAG9N,EAAI+N,EAAG/N,EAChB6O,EAAMb,EAAGhO,EAAI+N,EAAG/N,EAChB8O,EAAMhB,EAAG7N,EAAI8N,EAAG9N,EAChB8O,EAAMf,EAAG/N,EAAI8N,EAAG9N,EAChBmI,EAAcwG,EAAMG,EAAMF,EAAMC,EAChCT,GAAOJ,EAAMc,EAAMF,EAAMX,GAAO9F,EAChCoG,GAAOI,EAAMV,EAAMD,EAAMa,GAAO1G,EACtC,MAAO,CACH+F,IAAKL,EAAG9N,EAAI6N,EAAG7N,EAAIqO,EAAMP,EAAG9N,EAC5BoO,IAAKN,EAAG7N,EAAI4N,EAAG5N,EAAIoO,EAAMP,EAAG7N,EAC5BoO,MACAC,IAAKN,EAAGhO,EAAI6N,EAAG7N,EAAIwO,EAAMR,EAAGhO,EAC5BuO,IAAKP,EAAG/N,EAAI4N,EAAG5N,EAAIuO,EAAMR,EAAG/N,EAC5BuO,MACAC,IAAKZ,EAAG7N,EACR0O,IAAKb,EAAG5N,EACR0O,IAAK,EAEb,CACJ,CA6BA,SAASK,EAAQC,EAAOC,GACpB,MAAMC,EA7BV,SAA+BtB,EAAIC,EAAIC,EAAIC,GAEvC,MAAMoB,EAAOxB,EA2BsB,CAAE5N,EAAG,IAAKC,EAAG,KA3BT6N,EAAIC,EAAIC,GAC/C,MAAO,CACHG,IAAKiB,EAAKb,IAAMa,EAAKT,IAAMS,EAAKZ,IAAMY,EAAKV,IAC3CN,IAAKgB,EAAKf,IAAMe,EAAKV,IAAMU,EAAKhB,IAAMgB,EAAKT,IAC3CN,IAAKe,EAAKhB,IAAMgB,EAAKZ,IAAMY,EAAKf,IAAMe,EAAKb,IAC3CD,IAAKc,EAAKZ,IAAMY,EAAKX,IAAMW,EAAKd,IAAMc,EAAKT,IAC3CJ,IAAKa,EAAKjB,IAAMiB,EAAKT,IAAMS,EAAKf,IAAMe,EAAKX,IAC3CD,IAAKY,EAAKf,IAAMe,EAAKd,IAAMc,EAAKjB,IAAMiB,EAAKZ,IAC3CC,IAAKW,EAAKd,IAAMc,EAAKV,IAAMU,EAAKb,IAAMa,EAAKX,IAC3CC,IAAKU,EAAKhB,IAAMgB,EAAKX,IAAMW,EAAKjB,IAAMiB,EAAKV,IAC3CC,IAAKS,EAAKjB,IAAMiB,EAAKb,IAAMa,EAAKhB,IAAMgB,EAAKd,IAEnD,CAeiBe,CAAsB,EAAoB,CAAErP,EAAGkP,EAASlF,UAAY,IAAK/J,EAAG,KAAO,CAAED,EAAGkP,EAASlF,UAAY,IAAK/J,EAAGiP,EAASlF,UAAY,KAAO,CAAEhK,EAAG,IAAKC,EAAGiP,EAASlF,UAAY,MAE1LsF,GAhBQ/M,EAgBgB4M,EAfvB,CACHhB,KAFO/L,EAeEwL,EAAsBsB,EAASK,QAASL,EAASM,SAAUN,EAASO,iBAAkBP,EAASQ,aAbjGvB,IAAM5L,EAAE4L,IAAM/L,EAAEkM,IAAM/L,EAAE6L,IAAMhM,EAAEqM,IAAMlM,EAAE8L,IAC/CD,IAAKhM,EAAEgM,IAAM7L,EAAE4L,IAAM/L,EAAEmM,IAAMhM,EAAE6L,IAAMhM,EAAEsM,IAAMnM,EAAE8L,IAC/CA,IAAKjM,EAAEiM,IAAM9L,EAAE4L,IAAM/L,EAAEoM,IAAMjM,EAAE6L,IAAMhM,EAAEuM,IAAMpM,EAAE8L,IAC/CC,IAAKlM,EAAE+L,IAAM5L,EAAE+L,IAAMlM,EAAEkM,IAAM/L,EAAEgM,IAAMnM,EAAEqM,IAAMlM,EAAEiM,IAC/CD,IAAKnM,EAAEgM,IAAM7L,EAAE+L,IAAMlM,EAAEmM,IAAMhM,EAAEgM,IAAMnM,EAAEsM,IAAMnM,EAAEiM,IAC/CA,IAAKpM,EAAEiM,IAAM9L,EAAE+L,IAAMlM,EAAEoM,IAAMjM,EAAEgM,IAAMnM,EAAEuM,IAAMpM,EAAEiM,IAC/CC,IAAKrM,EAAE+L,IAAM5L,EAAEkM,IAAMrM,EAAEkM,IAAM/L,EAAEmM,IAAMtM,EAAEqM,IAAMlM,EAAEoM,IAC/CD,IAAKtM,EAAEgM,IAAM7L,EAAEkM,IAAMrM,EAAEmM,IAAMhM,EAAEmM,IAAMtM,EAAEsM,IAAMnM,EAAEoM,IAC/CA,IAAKvM,EAAEiM,IAAM9L,EAAEkM,IAAMrM,EAAEoM,IAAMjM,EAAEmM,IAAMtM,EAAEuM,IAAMpM,EAAEoM,MAVvD,IAAevM,EAAGG,EAiBd,MAAMuH,EAASxK,EAAUsM,YAAYsD,EAASlF,UAAWkF,EAASlF,WAC5D2F,EAAkB,CAAC3P,EAAGC,KACxB,MAAMmI,EAAckH,EAAUjB,IAAMrO,EAAIsP,EAAUd,IAAMvO,EAAIqP,EAAUX,IACtE,MAAO,CACH3O,GAAIsP,EAAUnB,IAAMnO,EAAIsP,EAAUhB,IAAMrO,EAAIqP,EAAUb,KAAOrG,EAC7DnI,GAAIqP,EAAUlB,IAAMpO,EAAIsP,EAAUf,IAAMtO,EAAIqP,EAAUZ,KAAOtG,EAChE,EAEL,IAAK,IAAInI,EAAI,EAAGA,EAAIiP,EAASlF,UAAW/J,IACpC,IAAK,IAAID,EAAI,EAAGA,EAAIkP,EAASlF,UAAWhK,IAAK,CACzC,MAEM4P,EAAcD,EAFL3P,EAAI,GACJC,EAAI,IAEnB6J,EAAO5J,IAAIF,EAAGC,EAAGgP,EAAMlP,IAAIsC,KAAKC,MAAMsN,EAAY5P,GAAIqC,KAAKC,MAAMsN,EAAY3P,IACjF,CAEJ,MAAO,CACH6J,SACA6F,kBAER,CAEA,MAGME,EAAW,CAACzN,EAAGG,IAAMF,KAAKyN,KAAKzN,KAAK0N,IAAKxN,EAAEvC,EAAIoC,EAAEpC,EAAI,GAAKqC,KAAK0N,IAAKxN,EAAEtC,EAAImC,EAAEnC,EAAI,IACtF,SAAS+P,EAAIC,GACT,OAAOA,EAAO5D,QAAO,CAACjK,EAAGG,IAAMH,EAAIG,GACvC,CAqDA,SAAS2N,EAA+BC,EAAQC,EAAKtG,EAAQlK,GACzD,MAAMyQ,EAAe,CAAC,CAAErQ,EAAGqC,KAAKC,MAAM6N,EAAOnQ,GAAIC,EAAGoC,KAAKC,MAAM6N,EAAOlQ,KAChEqQ,EAAQjO,KAAKkO,IAAIH,EAAInQ,EAAIkQ,EAAOlQ,GAAKoC,KAAKkO,IAAIH,EAAIpQ,EAAImQ,EAAOnQ,GACnE,IAAIwQ,EACAC,EACAC,EACAC,EACAL,GACAE,EAAQnO,KAAKC,MAAM6N,EAAOlQ,GAC1BwQ,EAAQpO,KAAKC,MAAM6N,EAAOnQ,GAC1B0Q,EAAMrO,KAAKC,MAAM8N,EAAInQ,GACrB0Q,EAAMtO,KAAKC,MAAM8N,EAAIpQ,KAGrBwQ,EAAQnO,KAAKC,MAAM6N,EAAOnQ,GAC1ByQ,EAAQpO,KAAKC,MAAM6N,EAAOlQ,GAC1ByQ,EAAMrO,KAAKC,MAAM8N,EAAIpQ,GACrB2Q,EAAMtO,KAAKC,MAAM8N,EAAInQ,IAEzB,MAAM2Q,EAAKvO,KAAKkO,IAAIG,EAAMF,GACpBK,EAAKxO,KAAKkO,IAAII,EAAMF,GAC1B,IAAIhK,EAAQpE,KAAKC,OAAOsO,EAAK,GAC7B,MAAME,EAAQN,EAAQE,EAAM,GAAK,EAC3BK,EAAQN,EAAQE,EAAM,GAAK,EACjC,IAAIK,GAAe,EAEnB,IAAK,IAAIhR,EAAIwQ,EAAOvQ,EAAIwQ,EAAOzQ,IAAM0Q,EAAMI,EAAO9Q,GAAK8Q,EAAO,CAI1D,MAAMG,EAAQX,EAAQrQ,EAAID,EACpBkR,EAAQZ,EAAQtQ,EAAIC,EAC1B,GAAI6J,EAAO/J,IAAIkR,EAAOC,KAAWF,IAC7BA,GAAgBA,EAChBX,EAAa5N,KAAK,CAAEzC,EAAGiR,EAAOhR,EAAGiR,IAC7Bb,EAAazQ,SAAWA,EAAS,GACjC,MAIR,GADA6G,GAASoK,EACLpK,EAAQ,EAAG,CACX,GAAIxG,IAAM0Q,EACN,MAEJ1Q,GAAK8Q,EACLtK,GAASmK,CACb,CACJ,CACA,MAAMO,EAAY,GAClB,IAAK,IAAIrO,EAAI,EAAGA,EAAIlD,EAAQkD,IACpBuN,EAAavN,IAAMuN,EAAavN,EAAI,GACpCqO,EAAU1O,KAAKoN,EAASQ,EAAavN,GAAIuN,EAAavN,EAAI,KAG1DqO,EAAU1O,KAAK,GAGvB,OAAO0O,CACX,CAIA,SAASC,EAAmBjB,EAAQC,EAAKtG,EAAQlK,GAC7C,MAAMyR,EAAOjB,EAAInQ,EAAIkQ,EAAOlQ,EACtBqR,EAAMlB,EAAIpQ,EAAImQ,EAAOnQ,EACrBuR,EAAarB,EAA+BC,EAAQC,EAAKtG,EAAQzH,KAAKmP,KAAK5R,EAAS,IACpF6R,EAAcvB,EAA+BC,EAAQ,CAAEnQ,EAAGmQ,EAAOnQ,EAAIsR,EAAKrR,EAAGkQ,EAAOlQ,EAAIoR,GAAQvH,EAAQzH,KAAKmP,KAAK5R,EAAS,IAC3H8R,EAAcH,EAAWhG,QAAUkG,EAAYlG,QAAU,EAC/D,OAAOkG,EAAYE,OAAOD,GAAaC,UAAUJ,EACrD,CAGA,SAASK,EAAmBC,EAAUC,GAClC,MAAMC,EAAc/B,EAAI6B,GAAY7B,EAAI8B,GACxC,IAAIrL,EAAQ,EAIZ,OAHAqL,EAAOvM,SAAQ,CAACyM,EAAOlP,KACnB2D,GAASpE,KAAK0N,IAAK8B,EAAS/O,GAAKkP,EAAQD,EAAc,EAAE,IAEtD,CAAEA,cAAatL,QAC1B,CAIA,SAASwL,EAAaC,EAAOJ,EAAQhI,GACjC,IACI,MAAMqI,EAAgBf,EAAmBc,EAAO,CAAElS,GAAI,EAAGC,EAAGiS,EAAMjS,GAAK6J,EAAQgI,EAAOlS,QAChFwS,EAAchB,EAAmBc,EAAO,CAAElS,EAAGkS,EAAMlS,EAAGC,GAAI,GAAK6J,EAAQgI,EAAOlS,QAK9EyS,EAAwBjB,EAAmBc,EAJ5B,CACjBlS,EAAGqC,KAAK3B,IAAI,EAAGwR,EAAMlS,EAAIkS,EAAMjS,GAAK,EACpCA,EAAGoC,KAAK3B,IAAI,EAAGwR,EAAMjS,EAAIiS,EAAMlS,GAAK,GAE8B8J,EAAQgI,EAAOlS,QAK/E0S,EAAwBlB,EAAmBc,EAJzB,CACpBlS,EAAGqC,KAAK5B,IAAIqJ,EAAOrK,MAAOyS,EAAMlS,EAAIkS,EAAMjS,GAAK,EAC/CA,EAAGoC,KAAK5B,IAAIqJ,EAAOnK,OAAQuS,EAAMjS,EAAIiS,EAAMlS,GAAK,GAEqB8J,EAAQgI,EAAOlS,QAClF2S,EAAYX,EAAmBO,EAAeL,GAC9CU,EAAYZ,EAAmBQ,EAAaN,GAC5CW,EAAgBb,EAAmBS,EAAuBP,GAC1DY,EAAcd,EAAmBU,EAAuBR,GACxDa,EAAatQ,KAAKyN,KAAKyC,EAAU9L,MAAQ8L,EAAU9L,MACrD+L,EAAU/L,MAAQ+L,EAAU/L,MAC5BgM,EAAchM,MAAQgM,EAAchM,MACpCiM,EAAYjM,MAAQiM,EAAYjM,OAC9BmM,GAAWL,EAAUR,YAAcS,EAAUT,YAAcU,EAAcV,YAAcW,EAAYX,aAAe,EAKxH,OAAOY,GAJYtQ,KAAK0N,IAAKwC,EAAUR,YAAca,EAAU,GAC3DvQ,KAAK0N,IAAKyC,EAAUT,YAAca,EAAU,GAC5CvQ,KAAK0N,IAAK0C,EAAcV,YAAca,EAAU,GAChDvQ,KAAK0N,IAAK2C,EAAYX,YAAca,EAAU,IAAMA,CAK5D,CAFA,MAAOzP,GACH,OAAOmH,GACX,CACJ,CACA,SAASuI,EAAiB/I,EAAQF,GAC9B,IAAIkJ,EAAQzQ,KAAK0Q,MAAMnJ,EAAE5J,GACzB,KAAO8J,EAAO/J,IAAI+S,EAAOzQ,KAAK0Q,MAAMnJ,EAAE3J,KAClC6S,IAEJ,IAAIE,EAAS3Q,KAAK0Q,MAAMnJ,EAAE5J,GAC1B,KAAO8J,EAAO/J,IAAIiT,EAAQ3Q,KAAK0Q,MAAMnJ,EAAE3J,KACnC+S,IAEJ,MAAMhT,GAAK8S,EAAQE,GAAU,EAC7B,IAAIC,EAAO5Q,KAAK0Q,MAAMnJ,EAAE3J,GACxB,KAAO6J,EAAO/J,IAAIsC,KAAK0Q,MAAM/S,GAAIiT,IAC7BA,IAEJ,IAAIC,EAAU7Q,KAAK0Q,MAAMnJ,EAAE3J,GAC3B,KAAO6J,EAAO/J,IAAIsC,KAAK0Q,MAAM/S,GAAIkT,IAC7BA,IAGJ,MAAO,CAAElT,IAAGC,GADDgT,EAAOC,GAAW,EAEjC,CAkKA,SAASC,EAAqBrJ,EAAQsJ,EAAuB5D,EAAUD,EAASG,GAG5E,IAAI1F,EACAqJ,EACJ,MACOrJ,YAAWqJ,cAxUtB,SAA0B9D,EAASC,EAAUE,EAAY5F,GACrD,MAAMuJ,GAAcrD,EAAIoB,EAAmB7B,EAASG,EAAY5F,EAAQ,IAAM,EAC1EkG,EAAIoB,EAAmB7B,EAASC,EAAU1F,EAAQ,IAAM,EACxDkG,EAAIoB,EAAmB1B,EAAYH,EAASzF,EAAQ,IAAM,EAC1DkG,EAAIoB,EAAmB5B,EAAUD,EAASzF,EAAQ,IAAM,GAAK,EACjE,GAAIuJ,EAAa,EACb,MAAM,IAAIvS,MAAM,uBAEpB,MAAMwS,EAAejR,KAAK0Q,MAAMlD,EAASN,EAASC,GAAY6D,GACxDE,EAAgBlR,KAAK0Q,MAAMlD,EAASN,EAASG,GAAc2D,GACjE,IAAIrJ,EAAY3H,KAAKC,OAAOgR,EAAeC,GAAiB,GAAK,EACjE,OAAQvJ,EAAY,GAChB,KAAK,EACDA,IACA,MACJ,KAAK,EACDA,IAGR,MAAO,CAAEA,YAAWqJ,aACxB,CAoTqCG,CAAiBjE,EAASC,EAAUE,EAAY5F,GAIjF,CAFA,MAAO2J,GACH,OAAO,IACX,CAEA,MAAMC,EACClE,EAASxP,EAAIuP,EAAQvP,EAAI0P,EAAW1P,EADrC0T,EAEClE,EAASvP,EAAIsP,EAAQtP,EAAIyP,EAAWzP,EAErC0T,GAAiC9D,EAASN,EAASG,GAAcG,EAASN,EAASC,IAAa,EAAI6D,EACpGO,EAAsB,EAAK,EAAID,EAC/BE,EAA2B,CAC7B7T,EAAGuP,EAAQvP,EAAI4T,GAAuBF,EAA6BnE,EAAQvP,GAC3EC,EAAGsP,EAAQtP,EAAI2T,GAAuBF,EAA6BnE,EAAQtP,IAEzE6T,EAAoBV,EACrBpQ,KAAIqE,IACL,MAAMrH,GAAKqH,EAAE/G,IAAIyT,OAAS1M,EAAE/G,IAAI0T,KAAO3M,EAAE4M,OAAOF,OAAS1M,EAAE4M,OAAOD,MAAQ,EACpE/T,GAAKoH,EAAE/G,IAAIL,EAAIoH,EAAE4M,OAAOhU,EAAI,GAAK,EACvC,GAAK6J,EAAO/J,IAAIsC,KAAKC,MAAMtC,GAAIqC,KAAKC,MAAMrC,IAK1C,MAAO,CAAED,IAAGC,IAAGiU,MAFGjC,EAAa,CAAEjS,EAAGqC,KAAKC,MAAMtC,GAAIC,EAAGoC,KAAKC,MAAMrC,IAAM,CAAC,EAAG,EAAG,GAAI6J,GACxD+F,EAAS,CAAE7P,IAAGC,KAAK4T,GACvB,IAErBM,QAAOhU,KAAOA,IACdiU,MAAK,CAAChS,EAAGG,IAAMH,EAAE8R,MAAQ3R,EAAE2R,QAIhC,MAAO,CAAEzE,iBADgBkE,GAAgC,IAAMG,EAAkBlU,OAASkU,EAAkB,GAAKD,EACtF7J,YAC/B,CAEA,SAASqK,EAAKvK,GACV,MAAMwK,EA3MV,SAAgBxK,GACZ,MAAMyK,EAAqB,GAC3B,IAAIC,EAA2B,GAC/B,MAAMpB,EAAwB,GAC9B,IAAIqB,EAA8B,GAClC,IAAK,IAAIxU,EAAI,EAAGA,GAAK6J,EAAOnK,OAAQM,IAAK,CACrC,IAAIL,EAAS,EACT8U,GAAU,EACVC,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,GACzB,IAAK,IAAI3U,GAAK,EAAGA,GAAK8J,EAAOrK,MAAOO,IAAK,CACrC,MAAMG,EAAI2J,EAAO/J,IAAIC,EAAGC,GACxB,GAAIE,IAAMuU,EACN9U,QAEC,CACD+U,EAAQ,CAACA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAI/U,GACjDA,EAAS,EACT8U,EAAUvU,EAEV,MAAMyU,EAAgC5E,EAAI2E,GAAS,EAC7CE,EAAqBxS,KAAKkO,IAAIoE,EAAM,GAAKC,GAAiCA,GAC5EvS,KAAKkO,IAAIoE,EAAM,GAAKC,GAAiCA,GACrDvS,KAAKkO,IAAIoE,EAAM,GAAK,EAAIC,GAAiC,EAAIA,GAC7DvS,KAAKkO,IAAIoE,EAAM,GAAKC,GAAiCA,GACrDvS,KAAKkO,IAAIoE,EAAM,GAAKC,GAAiCA,IACpDzU,EAEC2U,EAAmC9E,EAAI2E,EAAMvJ,OAAO,IAAM,EAC1D2J,EAAwB1S,KAAKkO,IAAIoE,EAAM,GAAKG,GAAoCA,GAClFzS,KAAKkO,IAAIoE,EAAM,GAAKG,GAAoCA,GACxDzS,KAAKkO,IAAIoE,EAAM,GAAKG,GAAoCA,GACxD3U,EACJ,GAAI0U,EAAoB,CAEpB,MAAMb,EAAOhU,EAAI2U,EAAM,GAAKA,EAAM,GAC5BZ,EAASC,EAAOW,EAAM,GACtBK,EAAO,CAAEjB,SAAQC,OAAM/T,KAGvBgV,EAAgBT,EAAyBL,QAAO9M,GAAM0M,GAAU1M,EAAE4M,OAAOF,QAAUA,GAAU1M,EAAE4M,OAAOD,MACvGA,GAAQ3M,EAAE4M,OAAOF,QAAUA,GAAU1M,EAAE4M,OAAOD,MAC9CD,GAAU1M,EAAE4M,OAAOF,QAAUC,GAAQ3M,EAAE4M,OAAOD,MAAUW,EAAM,IAAMtN,EAAE4M,OAAOD,KAAO3M,EAAE4M,OAAOF,QA3O/F,KA4OMY,EAAM,IAAMtN,EAAE4M,OAAOD,KAAO3M,EAAE4M,OAAOF,QA7O3C,KA8OCkB,EAAcrV,OAAS,EACvBqV,EAAc,GAAGhB,OAASe,EAG1BR,EAAyB/R,KAAK,CAAEnC,IAAK0U,EAAMf,OAAQe,GAE3D,CACA,GAAID,EAAuB,CAEvB,MAAMf,EAAOhU,EAAI2U,EAAM,GACjBZ,EAASC,EAAOW,EAAM,GACtBK,EAAO,CAAEjB,SAAQ9T,IAAG+T,QAGpBiB,EAAgBR,EAA4BN,QAAO9M,GAAM0M,GAAU1M,EAAE4M,OAAOF,QAAUA,GAAU1M,EAAE4M,OAAOD,MAC1GA,GAAQ3M,EAAE4M,OAAOF,QAAUA,GAAU1M,EAAE4M,OAAOD,MAC9CD,GAAU1M,EAAE4M,OAAOF,QAAUC,GAAQ3M,EAAE4M,OAAOD,MAAUW,EAAM,IAAMtN,EAAE4M,OAAOD,KAAO3M,EAAE4M,OAAOF,QA7P/F,KA8PMY,EAAM,IAAMtN,EAAE4M,OAAOD,KAAO3M,EAAE4M,OAAOF,QA/P3C,KAgQCkB,EAAcrV,OAAS,EACvBqV,EAAc,GAAGhB,OAASe,EAG1BP,EAA4BhS,KAAK,CAAEnC,IAAK0U,EAAMf,OAAQe,GAE9D,CACJ,CACJ,CACAT,EAAmB9R,QAAQ+R,EAAyBL,QAAO9M,GAAKA,EAAE4M,OAAOhU,IAAMA,GAAKoH,EAAE4M,OAAOhU,EAAIoH,EAAE/G,IAAIL,GAAK,KAC5GuU,EAA2BA,EAAyBL,QAAO9M,GAAKA,EAAE4M,OAAOhU,IAAMA,IAC/EmT,EAAsB3Q,QAAQgS,EAA4BN,QAAO9M,GAAKA,EAAE4M,OAAOhU,IAAMA,KACrFwU,EAA8BA,EAA4BN,QAAO9M,GAAKA,EAAE4M,OAAOhU,IAAMA,GACzF,CACAsU,EAAmB9R,QAAQ+R,EAAyBL,QAAO9M,GAAKA,EAAE4M,OAAOhU,EAAIoH,EAAE/G,IAAIL,GAAK,KACxFmT,EAAsB3Q,QAAQgS,GAQ9B,MAAMS,EAA+B,GACrC,IAAK,MAAMC,KAAQZ,EAAoB,CACnC,GAAIY,EAAKlB,OAAOhU,EAAIkV,EAAK7U,IAAIL,EAAI,EAE7B,SAGJ,MAAMD,GAAKmV,EAAK7U,IAAIyT,OAASoB,EAAK7U,IAAI0T,KAAOmB,EAAKlB,OAAOF,OAASoB,EAAKlB,OAAOD,MAAQ,EAChF/T,GAAKkV,EAAK7U,IAAIL,EAAIkV,EAAKlB,OAAOhU,EAAI,GAAK,EAC7C,IAAK6J,EAAO/J,IAAIsC,KAAK0Q,MAAM/S,GAAIqC,KAAK0Q,MAAM9S,IACtC,SAEJ,MAAMmV,EAAU,CAACD,EAAK7U,IAAI0T,KAAOmB,EAAK7U,IAAIyT,OAAQoB,EAAKlB,OAAOD,KAAOmB,EAAKlB,OAAOF,OAAQoB,EAAKlB,OAAOhU,EAAIkV,EAAK7U,IAAIL,EAAI,GAChH+B,EAAOgO,EAAIoF,GAAWA,EAAQxV,OAE9BsU,EAAQjC,EAAa,CAAEjS,EAAGqC,KAAK0Q,MAAM/S,GAAIC,EAAGoC,KAAK0Q,MAAM9S,IAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI6J,GACpFoL,EAA6BzS,KAAK,CAAEyR,QAAOlU,IAAGC,IAAG+B,QACrD,CACA,GAAIkT,EAA6BtV,OAAS,EAEtC,OAAO,KAEXsV,EAA6Bd,MAAK,CAAChS,EAAGG,IAAMH,EAAE8R,MAAQ3R,EAAE2R,QAExD,MAAMmB,EAAsB,GAC5B,IAAK,IAAIvS,EAAI,EAAGA,EAAIT,KAAK5B,IAAIyU,EAA6BtV,OAjTzB,KAiTkEkD,EAAG,CAClG,MAAMoP,EAAQgD,EAA6BpS,GACrCwS,EAAc,GACpB,IAAK,MAAMC,KAAcL,EACjBK,IAAerD,GAGnBoD,EAAY7S,KAAK+S,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAa,CAAErB,MAAOqB,EAAWrB,MAAS7R,KAAK0N,IAAKwF,EAAWvT,KAAOkQ,EAAMlQ,KAAO,GAAMkQ,EAAMlQ,QAEpJsT,EAAYlB,MAAK,CAAChS,EAAGG,IAAMH,EAAE8R,MAAQ3R,EAAE2R,QACvCmB,EAAoB5S,KAAK,CACrBiT,OAAQ,CAACxD,EAAOoD,EAAY,GAAIA,EAAY,IAC5CpB,MAAOhC,EAAMgC,MAAQoB,EAAY,GAAGpB,MAAQoB,EAAY,GAAGpB,OAEnE,CACAmB,EAAoBjB,MAAK,CAAChS,EAAGG,IAAMH,EAAE8R,MAAQ3R,EAAE2R,QAC/C,MAAMyB,EAAyBN,EAAoB,IAC7C,SAAE7F,EAAQ,QAAED,EAAO,WAAEG,GA1T/B,SAA+BkG,EAAUC,EAAUC,GAE/C,MAAMC,EAAiBlG,EAAS+F,EAAUC,GACpCG,EAAmBnG,EAASgG,EAAUC,GACtCG,EAAmBpG,EAAS+F,EAAUE,GAC5C,IAAIpG,EACAH,EACAC,EAiBJ,OAdKE,EAAYH,EAASC,GADtBwG,GAAoBD,GAAkBC,GAAoBC,EACxB,CAACJ,EAAUD,EAAUE,GAElDG,GAAoBD,GAAoBC,GAAoBF,EAC/B,CAACH,EAAUC,EAAUC,GAGrB,CAACF,EAAUE,EAAUD,IAKrDrG,EAASxP,EAAIuP,EAAQvP,IAAM0P,EAAWzP,EAAIsP,EAAQtP,IAAQuP,EAASvP,EAAIsP,EAAQtP,IAAMyP,EAAW1P,EAAIuP,EAAQvP,GAAM,KACnH0P,EAAYF,GAAY,CAACA,EAAUE,IAEjC,CAAEA,aAAYH,UAASC,WAClC,CAiS8C0G,IAAyBP,EAAuBD,QACpFS,EAAYhD,EAAqBrJ,EAAQsJ,EAAuB5D,EAAUD,EAASG,GACnFnO,EAAS,GACX4U,GACA5U,EAAOkB,KAAK,CACRgN,iBAAkB,CAAEzP,EAAGmW,EAAU1G,iBAAiBzP,EAAGC,EAAGkW,EAAU1G,iBAAiBxP,GACnFyP,WAAY,CAAE1P,EAAG0P,EAAW1P,EAAGC,EAAGyP,EAAWzP,GAC7C+J,UAAWmM,EAAUnM,UACrBuF,QAAS,CAAEvP,EAAGuP,EAAQvP,EAAGC,EAAGsP,EAAQtP,GACpCuP,SAAU,CAAExP,EAAGwP,EAASxP,EAAGC,EAAGuP,EAASvP,KAQ/C,MAAMmW,EAAcvD,EAAiB/I,EAAQ0F,GACvC6G,EAAaxD,EAAiB/I,EAAQyF,GACtC+G,EAAgBzD,EAAiB/I,EAAQ4F,GACzC6G,EAAoBpD,EAAqBrJ,EAAQsJ,EAAuBgD,EAAaC,EAAYC,GAUvG,OATIC,GACAhV,EAAOkB,KAAK,CACRgN,iBAAkB,CAAEzP,EAAGuW,EAAkB9G,iBAAiBzP,EAAGC,EAAGsW,EAAkB9G,iBAAiBxP,GACnGyP,WAAY,CAAE1P,EAAGsW,EAActW,EAAGC,EAAGqW,EAAcrW,GACnDsP,QAAS,CAAEvP,EAAGqW,EAAWrW,EAAGC,EAAGoW,EAAWpW,GAC1CuP,SAAU,CAAExP,EAAGoW,EAAYpW,EAAGC,EAAGmW,EAAYnW,GAC7C+J,UAAWuM,EAAkBvM,YAGf,IAAlBzI,EAAO3B,OACA,KAEJ2B,CACX,CA2CsBiV,CAAO1M,GACzB,IAAKwK,EACD,OAAO,KAEX,IAAK,MAAMpF,KAAYoF,EAAW,CAC9B,MAAMmC,EAAYzH,EAAQlF,EAAQoF,GAC5BwH,EAAUnT,EAAOkT,EAAU3M,QACjC,GAAI4M,EACA,MAAO,CACHC,WAAYD,EAAQ1V,MACpBxB,KAAMkX,EAAQzU,KACdwK,OAAQiK,EAAQjK,OAChB1C,QAAS2M,EAAQ3M,QACjBmF,SAAU,CACN0H,eAAgBH,EAAU9G,gBAAgBT,EAASlF,UAAW,GAC9D6M,cAAeJ,EAAU9G,gBAAgB,EAAG,GAC5CmH,kBAAmBL,EAAU9G,gBAAgBT,EAASlF,UAAWkF,EAASlF,WAC1E+M,iBAAkBN,EAAU9G,gBAAgB,EAAGT,EAASlF,WACxDgN,sBAAuB9H,EAASM,SAChCyH,qBAAsB/H,EAASK,QAC/B2H,wBAAyBhI,EAASQ,WAClCyH,4BAA6BjI,EAASO,kBAE1C3F,OAAQ2M,EAAU3M,OAG9B,CACA,OAAO,IACX,CACA,MAAMsN,EAAiB,CACnBC,kBAAmB,cACnBC,iBAAkB,CACdC,IAAK,MACLC,MAAO,MACPC,KAAM,MACNC,yBAAyB,GAE7BC,mBAAmB,GAEvB,SAASC,EAAYC,EAAQC,GACzBtC,OAAOuC,KAAKD,GAAKvS,SAAQyS,IACrBH,EAAOG,GAAOF,EAAIE,EAAI,GAE9B,CACA,SAASC,EAAKzY,EAAMC,EAAOE,EAAQuY,EAAkB,CAAC,GAClD,MAAMC,EAAU3C,OAAO4C,OAAO,MAC9BR,EAAYO,EAASf,GACrBQ,EAAYO,EAASD,GACrB,MAAMG,EAAiD,eAA9BF,EAAQd,mBAAoE,gBAA9Bc,EAAQd,kBACzEiB,EAA6C,gBAA9BH,EAAQd,mBAAuCgB,GAC9D,UAAEE,EAAS,SAAEC,GAlyFvB,SAAkBhZ,EAAMC,EAAOE,EAAQ8Y,EAAgBC,EAAkBf,GACrE,MAAMgB,EAAalZ,EAAQE,EAC3B,GAAIH,EAAKI,SAAwB,EAAb+Y,EAChB,MAAM,IAAI7X,MAAM,uCAGpB,IAEI8X,EAFAC,EAAe,EAGflB,IACAiB,EAAkB,IAAI9Y,kBAAkBN,EAAKoB,OAAQiY,EAAcF,GACnEE,GAAgBF,GAEpB,MAAMG,EAAkB,IAAInY,EAAOlB,EAAOE,EAAQiZ,GAClD,GAAIF,EAAiBhB,wBACjB,IAAK,IAAIzX,EAAI,EAAGA,EAAIN,EAAQM,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAIP,EAAOO,IAAK,CAC5B,MAAM+Y,EAAkC,GAAjB9Y,EAAIR,EAAQO,GAC7BgH,EAAIxH,EAAKuZ,GACTC,EAAIxZ,EAAKuZ,EAAgB,GACzBxW,EAAI/C,EAAKuZ,EAAgB,GAC/BD,EAAgB5Y,IAAIF,EAAGC,EAEtByY,EAAiBnB,IAAMvQ,EAAI0R,EAAiBlB,MAAQwB,EAAIN,EAAiBjB,KAAOlV,EAAI,KAAQ,EACjG,MAIJ,IAAK,IAAItC,EAAI,EAAGA,EAAIN,EAAQM,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAIP,EAAOO,IAAK,CAC5B,MAAM+Y,EAAkC,GAAjB9Y,EAAIR,EAAQO,GAC7BgH,EAAIxH,EAAKuZ,GACTC,EAAIxZ,EAAKuZ,EAAgB,GACzBxW,EAAI/C,EAAKuZ,EAAgB,GAC/BD,EAAgB5Y,IAAIF,EAAGC,EAAGyY,EAAiBnB,IAAMvQ,EAAI0R,EAAiBlB,MAAQwB,EAAIN,EAAiBjB,KAAOlV,EAC9G,CAGR,MAAM0W,EAAwB5W,KAAKmP,KAAK/R,EA5DxB,GA6DVyZ,EAAsB7W,KAAKmP,KAAK7R,EA7DtB,GA8DVwZ,EAAmBF,EAAwBC,EACjD,IAAIE,EACAzB,IACAyB,EAAoB,IAAItZ,kBAAkBN,EAAKoB,OAAQiY,EAAcM,GACrEN,GAAgBM,GAEpB,MAAME,EAAc,IAAI1Y,EAAOsY,EAAuBC,EAAqBE,GAC3E,IAAK,IAAIE,EAAiB,EAAGA,EAAiBJ,EAAqBI,IAC/D,IAAK,IAAIC,EAAoB,EAAGA,EAAoBN,EAAuBM,IAAqB,CAC5F,IAAI9Y,EAAM6J,IACN5J,EAAM,EACV,IAAK,IAAIT,EAAI,EAAGA,EAzER,EAyEyBA,IAC7B,IAAK,IAAID,EAAI,EAAGA,EA1EZ,EA0E6BA,IAAK,CAClC,MAAMwZ,EAAgBV,EAAgB/Y,IA3EtC,EA2E0CwZ,EAAkCvZ,EA3E5E,EA2E+EsZ,EAA+BrZ,GAC9GQ,EAAM4B,KAAK5B,IAAIA,EAAK+Y,GACpB9Y,EAAM2B,KAAK3B,IAAIA,EAAK8Y,EACxB,CAMJ,IAAIC,GAAWhZ,EAAMC,GAAO,EAG5B,MAAMgZ,EAAY,KAElB,GADAD,EAAUpX,KAAK5B,IAAI,IAAKgZ,EAAUC,GAC9BhZ,EAAMD,GAxFI,KA8FVgZ,EAAUhZ,EAAM,EACZ6Y,EAAiB,GAAKC,EAAoB,GAAG,CAO7C,MAAMI,GAA6BN,EAAYtZ,IAAIwZ,EAAmBD,EAAiB,GAClF,EAAID,EAAYtZ,IAAIwZ,EAAoB,EAAGD,GAC5CD,EAAYtZ,IAAIwZ,EAAoB,EAAGD,EAAiB,IAAM,EAC9D7Y,EAAMkZ,IACNF,EAAUE,EAElB,CAEJN,EAAYnZ,IAAIqZ,EAAmBD,EAAgBG,EACvD,CAEJ,IAAIlB,EACJ,GAAIZ,EAAmB,CACnB,MAAMiC,EAAkB,IAAI9Z,kBAAkBN,EAAKoB,OAAQiY,EAAcF,GACzEE,GAAgBF,EAChBJ,EAAY,IAAIjZ,EAAUsa,EAAiBna,EAC/C,MAEI8Y,EAAYjZ,EAAUsM,YAAYnM,EAAOE,GAE7C,IAAI6Y,EAAW,KACf,GAAIC,EACA,GAAId,EAAmB,CACnB,MAAMkC,EAAiB,IAAI/Z,kBAAkBN,EAAKoB,OAAQiY,EAAcF,GACxEH,EAAW,IAAIlZ,EAAUua,EAAgBpa,EAC7C,MAEI+Y,EAAWlZ,EAAUsM,YAAYnM,EAAOE,GAGhD,IAAK,IAAI2Z,EAAiB,EAAGA,EAAiBJ,EAAqBI,IAC/D,IAAK,IAAIC,EAAoB,EAAGA,EAAoBN,EAAuBM,IAAqB,CAC5F,MAAMlZ,EAAOE,EAAWgZ,EAAmB,EAAGN,EAAwB,GAChE3Y,EAAMC,EAAW+Y,EAAgB,EAAGJ,EAAsB,GAChE,IAAIlJ,EAAM,EACV,IAAK,IAAI8J,GAAW,EAAGA,GAAW,EAAGA,IACjC,IAAK,IAAIC,GAAW,EAAGA,GAAW,EAAGA,IACjC/J,GAAOqJ,EAAYtZ,IAAIM,EAAOyZ,EAASxZ,EAAMyZ,GAGrD,MAAMC,EAAYhK,EAAM,GACxB,IAAK,IAAI8J,EAAU,EAAGA,EAhJd,EAgJqCA,IACzC,IAAK,IAAIC,EAAU,EAAGA,EAjJlB,EAiJyCA,IAAW,CACpD,MAAM/Z,EAlJN,EAkJUuZ,EAAkCO,EACtC7Z,EAnJN,EAmJUqZ,EAA+BS,EACnCE,EAAMnB,EAAgB/Y,IAAIC,EAAGC,GACnCsY,EAAUrY,IAAIF,EAAGC,EAAGga,GAAOD,GACvBvB,GACAD,EAAStY,IAAIF,EAAGC,IAAKga,GAAOD,GAEpC,CAER,CAEJ,OAAIvB,EACO,CAAEF,YAAWC,YAEjB,CAAED,YACb,CAupFoC2B,CAAS1a,EAAMC,EAAOE,EAAQ2Y,EAAcH,EAAQb,iBAAkBa,EAAQR,mBAC9G,IAAIpW,EAAS8S,EAAKgE,EAAmBG,EAAWD,GAIhD,OAHKhX,GAAyC,gBAA9B4W,EAAQd,mBAAqE,gBAA9Bc,EAAQd,oBACnE9V,EAAS8S,EAAKgE,EAAmBE,EAAYC,IAE1CjX,CACX,CACA0W,EAAKkC,QAAUlC,C,oIC11Ff,2BAAgCmC,GAC9B,MAAMC,EAAUC,IAAIC,gBAAgBH,GAC9BI,EAAM,IAAIC,MAEhB,OAAO,IAAIC,SAAc,CAACC,EAASC,KACjCJ,EAAIK,OAAS,IAAMF,IACnBH,EAAIM,QAAUC,GAAOH,EAAOG,GAC5BP,EAAI1C,IAAMuC,CAAO,IAChBW,MAAK,KACNV,IAAIW,gBAAgBZ,GACpB,MAAMa,EAASC,SAASC,cAAc,UACtCF,EAAOzb,MAAQ+a,EAAI/a,MACnByb,EAAOvb,OAAS6a,EAAI7a,OACpB,MAAM0b,EAAMH,EAAOI,WAAW,MAE9B,OADAD,EAAIE,UAAUf,EAAK,EAAG,GACfa,EAAIG,aAAa,EAAG,EAAGN,EAAOzb,MAAOyb,EAAOvb,OAAO,GAE9D,EAEA,wCACE6a,GAEA,MAAMU,EAASC,SAASC,cAAc,UAClCZ,aAAeiB,kBACjBP,EAAOzb,MAAQ+a,EAAIkB,WACnBR,EAAOvb,OAAS6a,EAAImB,aACXnB,aAAeoB,iBACxBV,EAAOzb,MAAQ+a,EAAI/a,MAAMoc,QAAQrb,MACjC0a,EAAOvb,OAAS6a,EAAI7a,OAAOkc,QAAQrb,QAEnC0a,EAAOzb,MAAQ+a,EAAI/a,MACnByb,EAAOvb,OAAS6a,EAAI7a,QAEtB,MAAM0b,EAAMH,EAAOI,WAAW,MAE9B,OADAD,EAAIE,UAAUf,EAAK,EAAG,GACfa,EAAIG,aAAa,EAAG,EAAGN,EAAOzb,MAAOyb,EAAOvb,OACrD,EAIA,wBACE,MAAMH,EACJ,ohBACIsc,EAAY,IAAIhc,kBAAkB,MACxC,IAAK,IAAIgD,EAAI,EAAGA,EAAItD,EAAKI,OAAQkD,IAAK,CACpC,MAAMtC,EAAoB,MAAZhB,EAAKsD,GAAa,EAAI,IACpCgZ,EAAU,EAAIhZ,EAAI,GAAKtC,EACvBsb,EAAU,EAAIhZ,EAAI,GAAKtC,EACvBsb,EAAU,EAAIhZ,EAAI,GAAKtC,EACvBsb,EAAU,EAAIhZ,EAAI,GAAK,G,CAEzB,OAAO,IAAIiZ,UAAUD,EAAW,GAAI,GACtC,C,GCnDIE,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CCrBAJ,EAAoBO,EAAI,CAACH,EAASI,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,EAAEF,EAAYC,KAAST,EAAoBU,EAAEN,EAASK,IAC5ElH,OAAOoH,eAAeP,EAASK,EAAK,CAAEG,YAAY,EAAM9c,IAAK0c,EAAWC,IAE1E,ECNDT,EAAoBU,EAAI,CAACG,EAAKC,IAAUvH,OAAOwH,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFd,EAAoBjV,EAAKqV,IACH,oBAAXc,QAA0BA,OAAOC,aAC1C5H,OAAOoH,eAAeP,EAASc,OAAOC,YAAa,CAAE5c,MAAO,WAE7DgV,OAAOoH,eAAeP,EAAS,aAAc,CAAE7b,OAAO,GAAO,E,uBCL9D,eAQA,SAMA,gBAIEjB,YAAY8d,GAHZ,KAAAC,8BAAgDlB,EAChD,KAAAmB,qBAA+CnB,EAGxCoB,KAAaC,kBAChB/d,KAAK6d,gBAAkB,IAAKC,KAAaC,gBACvCJ,GAGN,CAEAK,aAAazO,GACX,GACEvP,KAAK4d,gCACE5d,KAAKie,0BAEZ,OAAOje,KAAK6d,gBAAgBK,OAAO3O,GAUrC,GANIA,aAAiB8M,YAEnB9M,EADSA,aAAiB4O,WACZ,IAAAC,iBAAgB7O,IAEtB,IAAA8O,8BAA6B9O,MAEjCA,aAAiB8M,WACrB,MAAMjb,MAAM,oDAGd,MAAMS,GAAS,aAAK0N,EAAMzP,KAAMyP,EAAMxP,MAAOwP,EAAMtP,QACnD,IAAK4B,GAA0B,KAAhBA,EAAO/B,KAEpB,MAAO,GAGT,MAAMwe,EAAO3b,KAAK5B,IAChBc,EAAO2N,SAAS2H,cAAc7W,EAC9BuB,EAAO2N,SAAS0H,eAAe5W,EAC/BuB,EAAO2N,SAAS4H,kBAAkB9W,EAClCuB,EAAO2N,SAAS6H,iBAAiB/W,GAE7Bie,EAAO5b,KAAK5B,IAChBc,EAAO2N,SAAS2H,cAAc5W,EAC9BsB,EAAO2N,SAAS0H,eAAe3W,EAC/BsB,EAAO2N,SAAS4H,kBAAkB7W,EAClCsB,EAAO2N,SAAS6H,iBAAiB9W,GAE7Bie,EAAO7b,KAAK3B,IAChBa,EAAO2N,SAAS2H,cAAc7W,EAC9BuB,EAAO2N,SAAS0H,eAAe5W,EAC/BuB,EAAO2N,SAAS4H,kBAAkB9W,EAClCuB,EAAO2N,SAAS6H,iBAAiB/W,GAE7Bme,EAAO9b,KAAK3B,IAChBa,EAAO2N,SAAS2H,cAAc5W,EAC9BsB,EAAO2N,SAAS0H,eAAe3W,EAC/BsB,EAAO2N,SAAS4H,kBAAkB7W,EAClCsB,EAAO2N,SAAS6H,iBAAiB9W,GAGnC,MAAO,CACL,CACEme,OAAQ,UACRC,SAAU9c,EAAO/B,KACjB8e,YAAa,IAAIC,gBAAgBP,EAAMC,EAAMC,EAAOF,EAAMG,EAAOF,GACjEO,aAAc,CACZjd,EAAO2N,SAAS2H,cAChBtV,EAAO2N,SAAS0H,eAChBrV,EAAO2N,SAAS4H,kBAChBvV,EAAO2N,SAAS6H,mBAIxB,CAEAlX,mCACE,MAAO,CAAC,UACV,CAEA6d,gCACE,QAAsCtB,IAAlC1c,KAAK4d,yBAAwC,CAC/C,GAAKE,KAAaC,wBAEdD,KACAC,gBAAgBgB,uBACGC,SAAS,WAAY,CAExC,MAAMC,QAAmBjf,KAAK6d,gBAAgBK,QAAO,IAAAgB,eACrD,GAA0B,IAAtBD,EAAW/e,QAA2C,QAA3B+e,EAAW,GAAGN,SAE3C,OADA3e,KAAK4d,0BAA2B,GACzB,C,CAIb5d,KAAK4d,0BAA2B,C,CAElC,OAAO5d,KAAK4d,wBACd,E","sources":["webpack://QrDetector/./node_modules/jsqr-es6/dist/jsQR.js","webpack://QrDetector/./src/utils.ts","webpack://QrDetector/webpack/bootstrap","webpack://QrDetector/webpack/runtime/define property getters","webpack://QrDetector/webpack/runtime/hasOwnProperty shorthand","webpack://QrDetector/webpack/runtime/make namespace object","webpack://QrDetector/./src/QrDetector.ts"],"sourcesContent":["class BitMatrix {\n    constructor(data, width) {\n        this.width = width;\n        this.height = data.length / width;\n        this.data = data;\n    }\n    static createEmpty(width, height) {\n        return new BitMatrix(new Uint8ClampedArray(width * height), width);\n    }\n    get(x, y) {\n        if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n            return false;\n        }\n        return !!this.data[y * this.width + x];\n    }\n    set(x, y, v) {\n        this.data[y * this.width + x] = v ? 1 : 0;\n    }\n    setRegion(left, top, width, height, v) {\n        for (let y = top; y < top + height; y++) {\n            for (let x = left; x < left + width; x++) {\n                this.set(x, y, !!v);\n            }\n        }\n    }\n}\n\nconst REGION_SIZE = 8;\nconst MIN_DYNAMIC_RANGE = 24;\nfunction numBetween(value, min, max) {\n    return value < min ? min : value > max ? max : value;\n}\n// Like BitMatrix but accepts arbitry Uint8 values\nclass Matrix {\n    constructor(width, height, buffer) {\n        this.width = width;\n        const bufferSize = width * height;\n        if (buffer && buffer.length !== bufferSize) {\n            throw new Error(\"Wrong buffer size\");\n        }\n        this.data = buffer || new Uint8ClampedArray(bufferSize);\n    }\n    get(x, y) {\n        return this.data[y * this.width + x];\n    }\n    set(x, y, value) {\n        this.data[y * this.width + x] = value;\n    }\n}\nfunction binarize(data, width, height, returnInverted, greyscaleWeights, canOverwriteImage) {\n    const pixelCount = width * height;\n    if (data.length !== pixelCount * 4) {\n        throw new Error(\"Malformed data passed to binarizer.\");\n    }\n    // assign the greyscale and binary image within the rgba buffer as the rgba image will not be needed after conversion\n    let bufferOffset = 0;\n    // Convert image to greyscale\n    let greyscaleBuffer;\n    if (canOverwriteImage) {\n        greyscaleBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n        bufferOffset += pixelCount;\n    }\n    const greyscalePixels = new Matrix(width, height, greyscaleBuffer);\n    if (greyscaleWeights.useIntegerApproximation) {\n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                const pixelPosition = (y * width + x) * 4;\n                const r = data[pixelPosition];\n                const g = data[pixelPosition + 1];\n                const b = data[pixelPosition + 2];\n                greyscalePixels.set(x, y, \n                // tslint:disable-next-line no-bitwise\n                (greyscaleWeights.red * r + greyscaleWeights.green * g + greyscaleWeights.blue * b + 128) >> 8);\n            }\n        }\n    }\n    else {\n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                const pixelPosition = (y * width + x) * 4;\n                const r = data[pixelPosition];\n                const g = data[pixelPosition + 1];\n                const b = data[pixelPosition + 2];\n                greyscalePixels.set(x, y, greyscaleWeights.red * r + greyscaleWeights.green * g + greyscaleWeights.blue * b);\n            }\n        }\n    }\n    const horizontalRegionCount = Math.ceil(width / REGION_SIZE);\n    const verticalRegionCount = Math.ceil(height / REGION_SIZE);\n    const blackPointsCount = horizontalRegionCount * verticalRegionCount;\n    let blackPointsBuffer;\n    if (canOverwriteImage) {\n        blackPointsBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, blackPointsCount);\n        bufferOffset += blackPointsCount;\n    }\n    const blackPoints = new Matrix(horizontalRegionCount, verticalRegionCount, blackPointsBuffer);\n    for (let verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n        for (let hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n            let min = Infinity;\n            let max = 0;\n            for (let y = 0; y < REGION_SIZE; y++) {\n                for (let x = 0; x < REGION_SIZE; x++) {\n                    const pixelLumosity = greyscalePixels.get(hortizontalRegion * REGION_SIZE + x, verticalRegion * REGION_SIZE + y);\n                    min = Math.min(min, pixelLumosity);\n                    max = Math.max(max, pixelLumosity);\n                }\n            }\n            // We could also compute the real average of all pixels but following the assumption that the qr code consists\n            // of bright and dark pixels and essentially not much in between, by (min + max)/2 we make the cut really between\n            // those two classes. If using the average over all pixel in a block of mostly bright pixels and few dark pixels,\n            // the avg would tend to the bright side and darker bright pixels could be interpreted as dark.\n            let average = (min + max) / 2;\n            // Small bias towards black by moving the threshold up. We do this, as in the finder patterns white holes tend\n            // to appear which makes them undetectable.\n            const blackBias = 1.11;\n            average = Math.min(255, average * blackBias);\n            if (max - min <= MIN_DYNAMIC_RANGE) {\n                // If variation within the block is low, assume this is a block with only light or only\n                // dark pixels. In that case we do not want to use the average, as it would divide this\n                // low contrast area into black and white pixels, essentially creating data out of noise.\n                //\n                // Default the blackpoint for these blocks to be half the min - effectively white them out\n                average = min / 2;\n                if (verticalRegion > 0 && hortizontalRegion > 0) {\n                    // Correct the \"white background\" assumption for blocks that have neighbors by comparing\n                    // the pixels in this block to the previously calculated black points. This is based on\n                    // the fact that dark barcode symbology is always surrounded by some amount of light\n                    // background for which reasonable black point estimates were made. The bp estimated at\n                    // the boundaries is used for the interior.\n                    // The (min < bp) is arbitrary but works better than other heuristics that were tried.\n                    const averageNeighborBlackPoint = (blackPoints.get(hortizontalRegion, verticalRegion - 1) +\n                        (2 * blackPoints.get(hortizontalRegion - 1, verticalRegion)) +\n                        blackPoints.get(hortizontalRegion - 1, verticalRegion - 1)) / 4;\n                    if (min < averageNeighborBlackPoint) {\n                        average = averageNeighborBlackPoint; // no need to apply black bias as already applied to neighbors\n                    }\n                }\n            }\n            blackPoints.set(hortizontalRegion, verticalRegion, average);\n        }\n    }\n    let binarized;\n    if (canOverwriteImage) {\n        const binarizedBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n        bufferOffset += pixelCount;\n        binarized = new BitMatrix(binarizedBuffer, width);\n    }\n    else {\n        binarized = BitMatrix.createEmpty(width, height);\n    }\n    let inverted = null;\n    if (returnInverted) {\n        if (canOverwriteImage) {\n            const invertedBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n            inverted = new BitMatrix(invertedBuffer, width);\n        }\n        else {\n            inverted = BitMatrix.createEmpty(width, height);\n        }\n    }\n    for (let verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n        for (let hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n            const left = numBetween(hortizontalRegion, 2, horizontalRegionCount - 3);\n            const top = numBetween(verticalRegion, 2, verticalRegionCount - 3);\n            let sum = 0;\n            for (let xRegion = -2; xRegion <= 2; xRegion++) {\n                for (let yRegion = -2; yRegion <= 2; yRegion++) {\n                    sum += blackPoints.get(left + xRegion, top + yRegion);\n                }\n            }\n            const threshold = sum / 25;\n            for (let xRegion = 0; xRegion < REGION_SIZE; xRegion++) {\n                for (let yRegion = 0; yRegion < REGION_SIZE; yRegion++) {\n                    const x = hortizontalRegion * REGION_SIZE + xRegion;\n                    const y = verticalRegion * REGION_SIZE + yRegion;\n                    const lum = greyscalePixels.get(x, y);\n                    binarized.set(x, y, lum <= threshold);\n                    if (returnInverted) {\n                        inverted.set(x, y, !(lum <= threshold));\n                    }\n                }\n            }\n        }\n    }\n    if (returnInverted) {\n        return { binarized, inverted };\n    }\n    return { binarized };\n}\n\n// tslint:disable:no-bitwise\nclass BitStream {\n    constructor(bytes) {\n        this.byteOffset = 0;\n        this.bitOffset = 0;\n        this.bytes = bytes;\n    }\n    readBits(numBits) {\n        if (numBits < 1 || numBits > 32 || numBits > this.available()) {\n            throw new Error(\"Cannot read \" + numBits.toString() + \" bits\");\n        }\n        let result = 0;\n        // First, read remainder from current byte\n        if (this.bitOffset > 0) {\n            const bitsLeft = 8 - this.bitOffset;\n            const toRead = numBits < bitsLeft ? numBits : bitsLeft;\n            const bitsToNotRead = bitsLeft - toRead;\n            const mask = (0xFF >> (8 - toRead)) << bitsToNotRead;\n            result = (this.bytes[this.byteOffset] & mask) >> bitsToNotRead;\n            numBits -= toRead;\n            this.bitOffset += toRead;\n            if (this.bitOffset === 8) {\n                this.bitOffset = 0;\n                this.byteOffset++;\n            }\n        }\n        // Next read whole bytes\n        if (numBits > 0) {\n            while (numBits >= 8) {\n                result = (result << 8) | (this.bytes[this.byteOffset] & 0xFF);\n                this.byteOffset++;\n                numBits -= 8;\n            }\n            // Finally read a partial byte\n            if (numBits > 0) {\n                const bitsToNotRead = 8 - numBits;\n                const mask = (0xFF >> bitsToNotRead) << bitsToNotRead;\n                result = (result << numBits) | ((this.bytes[this.byteOffset] & mask) >> bitsToNotRead);\n                this.bitOffset += numBits;\n            }\n        }\n        return result;\n    }\n    available() {\n        return 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;\n    }\n}\n\n// tslint:disable:no-bitwise\nvar Mode;\n(function (Mode) {\n    Mode[\"Numeric\"] = \"numeric\";\n    Mode[\"Alphanumeric\"] = \"alphanumeric\";\n    Mode[\"Byte\"] = \"byte\";\n    Mode[\"Kanji\"] = \"kanji\";\n    Mode[\"ECI\"] = \"eci\";\n    Mode[\"StructuredAppend\"] = \"structuredappend\";\n})(Mode || (Mode = {}));\nvar ModeByte;\n(function (ModeByte) {\n    ModeByte[ModeByte[\"Terminator\"] = 0] = \"Terminator\";\n    ModeByte[ModeByte[\"Numeric\"] = 1] = \"Numeric\";\n    ModeByte[ModeByte[\"Alphanumeric\"] = 2] = \"Alphanumeric\";\n    ModeByte[ModeByte[\"Byte\"] = 4] = \"Byte\";\n    ModeByte[ModeByte[\"Kanji\"] = 8] = \"Kanji\";\n    ModeByte[ModeByte[\"ECI\"] = 7] = \"ECI\";\n    ModeByte[ModeByte[\"StructuredAppend\"] = 3] = \"StructuredAppend\";\n    // FNC1FirstPosition = 0x5,\n    // FNC1SecondPosition = 0x9,\n})(ModeByte || (ModeByte = {}));\nfunction decodeNumeric(stream, size) {\n    const bytes = [];\n    let text = \"\";\n    const characterCountSize = [10, 12, 14][size];\n    let length = stream.readBits(characterCountSize);\n    // Read digits in groups of 3\n    while (length >= 3) {\n        const num = stream.readBits(10);\n        if (num >= 1000) {\n            throw new Error(\"Invalid numeric value above 999\");\n        }\n        const a = Math.floor(num / 100);\n        const b = Math.floor(num / 10) % 10;\n        const c = num % 10;\n        bytes.push(48 + a, 48 + b, 48 + c);\n        text += a.toString() + b.toString() + c.toString();\n        length -= 3;\n    }\n    // If the number of digits aren't a multiple of 3, the remaining digits are special cased.\n    if (length === 2) {\n        const num = stream.readBits(7);\n        if (num >= 100) {\n            throw new Error(\"Invalid numeric value above 99\");\n        }\n        const a = Math.floor(num / 10);\n        const b = num % 10;\n        bytes.push(48 + a, 48 + b);\n        text += a.toString() + b.toString();\n    }\n    else if (length === 1) {\n        const num = stream.readBits(4);\n        if (num >= 10) {\n            throw new Error(\"Invalid numeric value above 9\");\n        }\n        bytes.push(48 + num);\n        text += num.toString();\n    }\n    return { bytes, text };\n}\nconst AlphanumericCharacterCodes = [\n    \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\",\n    \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\",\n    \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\",\n    \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\n    \" \", \"$\", \"%\", \"*\", \"+\", \"-\", \".\", \"/\", \":\",\n];\nfunction decodeAlphanumeric(stream, size) {\n    const bytes = [];\n    let text = \"\";\n    const characterCountSize = [9, 11, 13][size];\n    let length = stream.readBits(characterCountSize);\n    while (length >= 2) {\n        const v = stream.readBits(11);\n        const a = Math.floor(v / 45);\n        const b = v % 45;\n        bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0), AlphanumericCharacterCodes[b].charCodeAt(0));\n        text += AlphanumericCharacterCodes[a] + AlphanumericCharacterCodes[b];\n        length -= 2;\n    }\n    if (length === 1) {\n        const a = stream.readBits(6);\n        bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0));\n        text += AlphanumericCharacterCodes[a];\n    }\n    return { bytes, text };\n}\nfunction decodeByte(stream, size) {\n    const bytes = [];\n    let text = \"\";\n    const characterCountSize = [8, 16, 16][size];\n    const length = stream.readBits(characterCountSize);\n    for (let i = 0; i < length; i++) {\n        const b = stream.readBits(8);\n        bytes.push(b);\n    }\n    try {\n        text += decodeURIComponent(bytes.map(b => `%${(\"0\" + b.toString(16)).substr(-2)}`).join(\"\"));\n    }\n    catch (_a) {\n        // failed to decode\n    }\n    return { bytes, text };\n}\nfunction decodeKanji(stream, size) {\n    const bytes = [];\n    const characterCountSize = [8, 10, 12][size];\n    const length = stream.readBits(characterCountSize);\n    for (let i = 0; i < length; i++) {\n        const k = stream.readBits(13);\n        let c = (Math.floor(k / 0xC0) << 8) | (k % 0xC0);\n        if (c < 0x1F00) {\n            c += 0x8140;\n        }\n        else {\n            c += 0xC140;\n        }\n        bytes.push(c >> 8, c & 0xFF);\n    }\n    const text = new TextDecoder(\"shift-jis\").decode(Uint8Array.from(bytes));\n    return { bytes, text };\n}\nfunction decode$2(data, version) {\n    const stream = new BitStream(data);\n    // There are 3 'sizes' based on the version. 1-9 is small (0), 10-26 is medium (1) and 27-40 is large (2).\n    const size = version <= 9 ? 0 : version <= 26 ? 1 : 2;\n    const result = {\n        text: \"\",\n        bytes: [],\n        chunks: [],\n        version,\n    };\n    while (stream.available() >= 4) {\n        const mode = stream.readBits(4);\n        if (mode === ModeByte.Terminator) {\n            return result;\n        }\n        else if (mode === ModeByte.ECI) {\n            if (stream.readBits(1) === 0) {\n                result.chunks.push({\n                    type: Mode.ECI,\n                    assignmentNumber: stream.readBits(7),\n                });\n            }\n            else if (stream.readBits(1) === 0) {\n                result.chunks.push({\n                    type: Mode.ECI,\n                    assignmentNumber: stream.readBits(14),\n                });\n            }\n            else if (stream.readBits(1) === 0) {\n                result.chunks.push({\n                    type: Mode.ECI,\n                    assignmentNumber: stream.readBits(21),\n                });\n            }\n            else {\n                // ECI data seems corrupted\n                result.chunks.push({\n                    type: Mode.ECI,\n                    assignmentNumber: -1,\n                });\n            }\n        }\n        else if (mode === ModeByte.Numeric) {\n            const numericResult = decodeNumeric(stream, size);\n            result.text += numericResult.text;\n            result.bytes.push(...numericResult.bytes);\n            result.chunks.push({\n                type: Mode.Numeric,\n                text: numericResult.text,\n            });\n        }\n        else if (mode === ModeByte.Alphanumeric) {\n            const alphanumericResult = decodeAlphanumeric(stream, size);\n            result.text += alphanumericResult.text;\n            result.bytes.push(...alphanumericResult.bytes);\n            result.chunks.push({\n                type: Mode.Alphanumeric,\n                text: alphanumericResult.text,\n            });\n        }\n        else if (mode === ModeByte.Byte) {\n            const byteResult = decodeByte(stream, size);\n            result.text += byteResult.text;\n            result.bytes.push(...byteResult.bytes);\n            result.chunks.push({\n                type: Mode.Byte,\n                bytes: byteResult.bytes,\n                text: byteResult.text,\n            });\n        }\n        else if (mode === ModeByte.Kanji) {\n            const kanjiResult = decodeKanji(stream, size);\n            result.text += kanjiResult.text;\n            result.bytes.push(...kanjiResult.bytes);\n            result.chunks.push({\n                type: Mode.Kanji,\n                bytes: kanjiResult.bytes,\n                text: kanjiResult.text,\n            });\n        }\n        else if (mode === ModeByte.StructuredAppend) {\n            result.chunks.push({\n                type: Mode.StructuredAppend,\n                currentSequence: stream.readBits(4),\n                totalSequence: stream.readBits(4),\n                parity: stream.readBits(8),\n            });\n        }\n    }\n    // If there is no data left, or the remaining bits are all 0, then that counts as a termination marker\n    if (stream.available() === 0 || stream.readBits(stream.available()) === 0) {\n        return result;\n    }\n}\n\nclass GenericGFPoly {\n    constructor(field, coefficients) {\n        if (coefficients.length === 0) {\n            throw new Error(\"No coefficients.\");\n        }\n        this.field = field;\n        const coefficientsLength = coefficients.length;\n        if (coefficientsLength > 1 && coefficients[0] === 0) {\n            // Leading term must be non-zero for anything except the constant polynomial \"0\"\n            let firstNonZero = 1;\n            while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n                firstNonZero++;\n            }\n            if (firstNonZero === coefficientsLength) {\n                this.coefficients = field.zero.coefficients;\n            }\n            else {\n                this.coefficients = new Uint8ClampedArray(coefficientsLength - firstNonZero);\n                for (let i = 0; i < this.coefficients.length; i++) {\n                    this.coefficients[i] = coefficients[firstNonZero + i];\n                }\n            }\n        }\n        else {\n            this.coefficients = coefficients;\n        }\n    }\n    degree() {\n        return this.coefficients.length - 1;\n    }\n    isZero() {\n        return this.coefficients[0] === 0;\n    }\n    getCoefficient(degree) {\n        return this.coefficients[this.coefficients.length - 1 - degree];\n    }\n    addOrSubtract(other) {\n        if (this.isZero()) {\n            return other;\n        }\n        if (other.isZero()) {\n            return this;\n        }\n        let smallerCoefficients = this.coefficients;\n        let largerCoefficients = other.coefficients;\n        if (smallerCoefficients.length > largerCoefficients.length) {\n            [smallerCoefficients, largerCoefficients] = [largerCoefficients, smallerCoefficients];\n        }\n        const sumDiff = new Uint8ClampedArray(largerCoefficients.length);\n        const lengthDiff = largerCoefficients.length - smallerCoefficients.length;\n        for (let i = 0; i < lengthDiff; i++) {\n            sumDiff[i] = largerCoefficients[i];\n        }\n        for (let i = lengthDiff; i < largerCoefficients.length; i++) {\n            sumDiff[i] = addOrSubtractGF(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n        }\n        return new GenericGFPoly(this.field, sumDiff);\n    }\n    multiply(scalar) {\n        if (scalar === 0) {\n            return this.field.zero;\n        }\n        if (scalar === 1) {\n            return this;\n        }\n        const size = this.coefficients.length;\n        const product = new Uint8ClampedArray(size);\n        for (let i = 0; i < size; i++) {\n            product[i] = this.field.multiply(this.coefficients[i], scalar);\n        }\n        return new GenericGFPoly(this.field, product);\n    }\n    multiplyPoly(other) {\n        if (this.isZero() || other.isZero()) {\n            return this.field.zero;\n        }\n        const aCoefficients = this.coefficients;\n        const aLength = aCoefficients.length;\n        const bCoefficients = other.coefficients;\n        const bLength = bCoefficients.length;\n        const product = new Uint8ClampedArray(aLength + bLength - 1);\n        for (let i = 0; i < aLength; i++) {\n            const aCoeff = aCoefficients[i];\n            for (let j = 0; j < bLength; j++) {\n                product[i + j] = addOrSubtractGF(product[i + j], this.field.multiply(aCoeff, bCoefficients[j]));\n            }\n        }\n        return new GenericGFPoly(this.field, product);\n    }\n    multiplyByMonomial(degree, coefficient) {\n        if (degree < 0) {\n            throw new Error(\"Invalid degree less than 0\");\n        }\n        if (coefficient === 0) {\n            return this.field.zero;\n        }\n        const size = this.coefficients.length;\n        const product = new Uint8ClampedArray(size + degree);\n        for (let i = 0; i < size; i++) {\n            product[i] = this.field.multiply(this.coefficients[i], coefficient);\n        }\n        return new GenericGFPoly(this.field, product);\n    }\n    evaluateAt(a) {\n        let result = 0;\n        if (a === 0) {\n            // Just return the x^0 coefficient\n            return this.getCoefficient(0);\n        }\n        const size = this.coefficients.length;\n        if (a === 1) {\n            // Just the sum of the coefficients\n            this.coefficients.forEach((coefficient) => {\n                result = addOrSubtractGF(result, coefficient);\n            });\n            return result;\n        }\n        result = this.coefficients[0];\n        for (let i = 1; i < size; i++) {\n            result = addOrSubtractGF(this.field.multiply(a, result), this.coefficients[i]);\n        }\n        return result;\n    }\n}\n\nfunction addOrSubtractGF(a, b) {\n    return a ^ b; // tslint:disable-line:no-bitwise\n}\nclass GenericGF {\n    constructor(primitive, size, genBase) {\n        this.primitive = primitive;\n        this.size = size;\n        this.generatorBase = genBase;\n        this.expTable = new Array(this.size);\n        this.logTable = new Array(this.size);\n        let x = 1;\n        for (let i = 0; i < this.size; i++) {\n            this.expTable[i] = x;\n            x = x * 2;\n            if (x >= this.size) {\n                x = (x ^ this.primitive) & (this.size - 1); // tslint:disable-line:no-bitwise\n            }\n        }\n        for (let i = 0; i < this.size - 1; i++) {\n            this.logTable[this.expTable[i]] = i;\n        }\n        this.zero = new GenericGFPoly(this, Uint8ClampedArray.from([0]));\n        this.one = new GenericGFPoly(this, Uint8ClampedArray.from([1]));\n    }\n    multiply(a, b) {\n        if (a === 0 || b === 0) {\n            return 0;\n        }\n        return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\n    }\n    inverse(a) {\n        if (a === 0) {\n            throw new Error(\"Can't invert 0\");\n        }\n        return this.expTable[this.size - this.logTable[a] - 1];\n    }\n    buildMonomial(degree, coefficient) {\n        if (degree < 0) {\n            throw new Error(\"Invalid monomial degree less than 0\");\n        }\n        if (coefficient === 0) {\n            return this.zero;\n        }\n        const coefficients = new Uint8ClampedArray(degree + 1);\n        coefficients[0] = coefficient;\n        return new GenericGFPoly(this, coefficients);\n    }\n    log(a) {\n        if (a === 0) {\n            throw new Error(\"Can't take log(0)\");\n        }\n        return this.logTable[a];\n    }\n    exp(a) {\n        return this.expTable[a];\n    }\n}\n\nfunction runEuclideanAlgorithm(field, a, b, R) {\n    // Assume a's degree is >= b's\n    if (a.degree() < b.degree()) {\n        [a, b] = [b, a];\n    }\n    let rLast = a;\n    let r = b;\n    let tLast = field.zero;\n    let t = field.one;\n    // Run Euclidean algorithm until r's degree is less than R/2\n    while (r.degree() >= R / 2) {\n        const rLastLast = rLast;\n        const tLastLast = tLast;\n        rLast = r;\n        tLast = t;\n        // Divide rLastLast by rLast, with quotient in q and remainder in r\n        if (rLast.isZero()) {\n            // Euclidean algorithm already terminated?\n            return null;\n        }\n        r = rLastLast;\n        let q = field.zero;\n        const denominatorLeadingTerm = rLast.getCoefficient(rLast.degree());\n        const dltInverse = field.inverse(denominatorLeadingTerm);\n        while (r.degree() >= rLast.degree() && !r.isZero()) {\n            const degreeDiff = r.degree() - rLast.degree();\n            const scale = field.multiply(r.getCoefficient(r.degree()), dltInverse);\n            q = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\n            r = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\n        }\n        t = q.multiplyPoly(tLast).addOrSubtract(tLastLast);\n        if (r.degree() >= rLast.degree()) {\n            return null;\n        }\n    }\n    const sigmaTildeAtZero = t.getCoefficient(0);\n    if (sigmaTildeAtZero === 0) {\n        return null;\n    }\n    const inverse = field.inverse(sigmaTildeAtZero);\n    return [t.multiply(inverse), r.multiply(inverse)];\n}\nfunction findErrorLocations(field, errorLocator) {\n    // This is a direct application of Chien's search\n    const numErrors = errorLocator.degree();\n    if (numErrors === 1) {\n        return [errorLocator.getCoefficient(1)];\n    }\n    const result = new Array(numErrors);\n    let errorCount = 0;\n    for (let i = 1; i < field.size && errorCount < numErrors; i++) {\n        if (errorLocator.evaluateAt(i) === 0) {\n            result[errorCount] = field.inverse(i);\n            errorCount++;\n        }\n    }\n    if (errorCount !== numErrors) {\n        return null;\n    }\n    return result;\n}\nfunction findErrorMagnitudes(field, errorEvaluator, errorLocations) {\n    // This is directly applying Forney's Formula\n    const s = errorLocations.length;\n    const result = new Array(s);\n    for (let i = 0; i < s; i++) {\n        const xiInverse = field.inverse(errorLocations[i]);\n        let denominator = 1;\n        for (let j = 0; j < s; j++) {\n            if (i !== j) {\n                denominator = field.multiply(denominator, addOrSubtractGF(1, field.multiply(errorLocations[j], xiInverse)));\n            }\n        }\n        result[i] = field.multiply(errorEvaluator.evaluateAt(xiInverse), field.inverse(denominator));\n        if (field.generatorBase !== 0) {\n            result[i] = field.multiply(result[i], xiInverse);\n        }\n    }\n    return result;\n}\nfunction decode$1(bytes, twoS) {\n    const outputBytes = new Uint8ClampedArray(bytes.length);\n    outputBytes.set(bytes);\n    const field = new GenericGF(0x011D, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\n    const poly = new GenericGFPoly(field, outputBytes);\n    const syndromeCoefficients = new Uint8ClampedArray(twoS);\n    let error = false;\n    for (let s = 0; s < twoS; s++) {\n        const evaluation = poly.evaluateAt(field.exp(s + field.generatorBase));\n        syndromeCoefficients[syndromeCoefficients.length - 1 - s] = evaluation;\n        if (evaluation !== 0) {\n            error = true;\n        }\n    }\n    if (!error) {\n        return outputBytes;\n    }\n    const syndrome = new GenericGFPoly(field, syndromeCoefficients);\n    const sigmaOmega = runEuclideanAlgorithm(field, field.buildMonomial(twoS, 1), syndrome, twoS);\n    if (sigmaOmega === null) {\n        return null;\n    }\n    const errorLocations = findErrorLocations(field, sigmaOmega[0]);\n    if (errorLocations == null) {\n        return null;\n    }\n    const errorMagnitudes = findErrorMagnitudes(field, sigmaOmega[1], errorLocations);\n    for (let i = 0; i < errorLocations.length; i++) {\n        const position = outputBytes.length - 1 - field.log(errorLocations[i]);\n        if (position < 0) {\n            return null;\n        }\n        outputBytes[position] = addOrSubtractGF(outputBytes[position], errorMagnitudes[i]);\n    }\n    return outputBytes;\n}\n\nconst VERSIONS = [\n    {\n        infoBits: null,\n        versionNumber: 1,\n        alignmentPatternCenters: [],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 7,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 19 }],\n            },\n            {\n                ecCodewordsPerBlock: 10,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n            },\n            {\n                ecCodewordsPerBlock: 13,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 13 }],\n            },\n            {\n                ecCodewordsPerBlock: 17,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 9 }],\n            },\n        ],\n    },\n    {\n        infoBits: null,\n        versionNumber: 2,\n        alignmentPatternCenters: [6, 18],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 10,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 34 }],\n            },\n            {\n                ecCodewordsPerBlock: 16,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 28 }],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 22 }],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n            },\n        ],\n    },\n    {\n        infoBits: null,\n        versionNumber: 3,\n        alignmentPatternCenters: [6, 22],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 15,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 55 }],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 44 }],\n            },\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 17 }],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 13 }],\n            },\n        ],\n    },\n    {\n        infoBits: null,\n        versionNumber: 4,\n        alignmentPatternCenters: [6, 26],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 80 }],\n            },\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 32 }],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 24 }],\n            },\n            {\n                ecCodewordsPerBlock: 16,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 9 }],\n            },\n        ],\n    },\n    {\n        infoBits: null,\n        versionNumber: 5,\n        alignmentPatternCenters: [6, 30],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 108 }],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 43 }],\n            },\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 16 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 11 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 12 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: null,\n        versionNumber: 6,\n        alignmentPatternCenters: [6, 34],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 68 }],\n            },\n            {\n                ecCodewordsPerBlock: 16,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 27 }],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 19 }],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 15 }],\n            },\n        ],\n    },\n    {\n        infoBits: 0x07C94,\n        versionNumber: 7,\n        alignmentPatternCenters: [6, 22, 38],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 78 }],\n            },\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 31 }],\n            },\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 14 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 15 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 13 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 14 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x085BC,\n        versionNumber: 8,\n        alignmentPatternCenters: [6, 24, 42],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 97 }],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 38 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 39 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 18 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 19 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 14 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 15 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x09A99,\n        versionNumber: 9,\n        alignmentPatternCenters: [6, 26, 46],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 116 }],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 36 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 37 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 16 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 17 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 12 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 13 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x0A4D3,\n        versionNumber: 10,\n        alignmentPatternCenters: [6, 28, 50],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 68 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 69 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 43 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 44 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 19 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 20 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x0BBF6,\n        versionNumber: 11,\n        alignmentPatternCenters: [6, 30, 54],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 81 }],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 1, dataCodewordsPerBlock: 50 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 51 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 22 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 23 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 12 },\n                    { numBlocks: 8, dataCodewordsPerBlock: 13 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x0C762,\n        versionNumber: 12,\n        alignmentPatternCenters: [6, 32, 58],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 92 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 93 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 36 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 37 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 20 },\n                    { numBlocks: 6, dataCodewordsPerBlock: 21 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 7, dataCodewordsPerBlock: 14 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 15 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x0D847,\n        versionNumber: 13,\n        alignmentPatternCenters: [6, 34, 62],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 107 }],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 8, dataCodewordsPerBlock: 37 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 38 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 8, dataCodewordsPerBlock: 20 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 21 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 12, dataCodewordsPerBlock: 11 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 12 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x0E60D,\n        versionNumber: 14,\n        alignmentPatternCenters: [6, 26, 46, 66],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 115 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 116 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 40 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 41 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 16 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 17 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 12 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 13 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x0F928,\n        versionNumber: 15,\n        alignmentPatternCenters: [6, 26, 48, 70],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 5, dataCodewordsPerBlock: 87 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 88 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 5, dataCodewordsPerBlock: 41 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 42 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 5, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 12 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 13 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x10B78,\n        versionNumber: 16,\n        alignmentPatternCenters: [6, 26, 50, 74],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 5, dataCodewordsPerBlock: 98 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 99 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 7, dataCodewordsPerBlock: 45 },\n                    { numBlocks: 3, dataCodewordsPerBlock: 46 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 15, dataCodewordsPerBlock: 19 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 20 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 13, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1145D,\n        versionNumber: 17,\n        alignmentPatternCenters: [6, 30, 54, 78],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 1, dataCodewordsPerBlock: 107 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 108 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 10, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 1, dataCodewordsPerBlock: 22 },\n                    { numBlocks: 15, dataCodewordsPerBlock: 23 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 14 },\n                    { numBlocks: 17, dataCodewordsPerBlock: 15 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x12A17,\n        versionNumber: 18,\n        alignmentPatternCenters: [6, 30, 56, 82],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 5, dataCodewordsPerBlock: 120 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 121 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 9, dataCodewordsPerBlock: 43 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 44 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 17, dataCodewordsPerBlock: 22 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 23 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 14 },\n                    { numBlocks: 19, dataCodewordsPerBlock: 15 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x13532,\n        versionNumber: 19,\n        alignmentPatternCenters: [6, 30, 58, 86],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 113 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 114 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 44 },\n                    { numBlocks: 11, dataCodewordsPerBlock: 45 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 17, dataCodewordsPerBlock: 21 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 22 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 9, dataCodewordsPerBlock: 13 },\n                    { numBlocks: 16, dataCodewordsPerBlock: 14 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x149A6,\n        versionNumber: 20,\n        alignmentPatternCenters: [6, 34, 62, 90],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 107 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 108 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 41 },\n                    { numBlocks: 13, dataCodewordsPerBlock: 42 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 15, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 15, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 10, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x15683,\n        versionNumber: 21,\n        alignmentPatternCenters: [6, 28, 50, 72, 94],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 116 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 117 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 42 }],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 17, dataCodewordsPerBlock: 22 },\n                    { numBlocks: 6, dataCodewordsPerBlock: 23 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 19, dataCodewordsPerBlock: 16 },\n                    { numBlocks: 6, dataCodewordsPerBlock: 17 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x168C9,\n        versionNumber: 22,\n        alignmentPatternCenters: [6, 26, 50, 74, 98],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 111 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 112 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 46 }],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 7, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 16, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [{ numBlocks: 34, dataCodewordsPerBlock: 13 }],\n            },\n        ],\n    },\n    {\n        infoBits: 0x177EC,\n        versionNumber: 23,\n        alignmentPatternCenters: [6, 30, 54, 74, 102],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 121 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 122 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 16, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x18EC4,\n        versionNumber: 24,\n        alignmentPatternCenters: [6, 28, 54, 80, 106],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 117 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 118 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 45 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 46 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 16, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 30, dataCodewordsPerBlock: 16 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 17 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x191E1,\n        versionNumber: 25,\n        alignmentPatternCenters: [6, 32, 58, 84, 110],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 8, dataCodewordsPerBlock: 106 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 107 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 8, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 13, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 7, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 22, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 22, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 13, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1AFAB,\n        versionNumber: 26,\n        alignmentPatternCenters: [6, 30, 58, 86, 114],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 10, dataCodewordsPerBlock: 114 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 115 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 19, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 28, dataCodewordsPerBlock: 22 },\n                    { numBlocks: 6, dataCodewordsPerBlock: 23 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 33, dataCodewordsPerBlock: 16 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 17 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1B08E,\n        versionNumber: 27,\n        alignmentPatternCenters: [6, 34, 62, 90, 118],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 8, dataCodewordsPerBlock: 122 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 123 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 22, dataCodewordsPerBlock: 45 },\n                    { numBlocks: 3, dataCodewordsPerBlock: 46 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 8, dataCodewordsPerBlock: 23 },\n                    { numBlocks: 26, dataCodewordsPerBlock: 24 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 12, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 28, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1CC1A,\n        versionNumber: 28,\n        alignmentPatternCenters: [6, 26, 50, 74, 98, 122],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 117 },\n                    { numBlocks: 10, dataCodewordsPerBlock: 118 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 45 },\n                    { numBlocks: 23, dataCodewordsPerBlock: 46 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 31, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 31, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1D33F,\n        versionNumber: 29,\n        alignmentPatternCenters: [6, 30, 54, 78, 102, 126],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 7, dataCodewordsPerBlock: 116 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 117 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 21, dataCodewordsPerBlock: 45 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 46 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 1, dataCodewordsPerBlock: 23 },\n                    { numBlocks: 37, dataCodewordsPerBlock: 24 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 19, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 26, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1ED75,\n        versionNumber: 30,\n        alignmentPatternCenters: [6, 26, 52, 78, 104, 130],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 5, dataCodewordsPerBlock: 115 },\n                    { numBlocks: 10, dataCodewordsPerBlock: 116 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 19, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 10, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 15, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 25, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 23, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 25, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1F250,\n        versionNumber: 31,\n        alignmentPatternCenters: [6, 30, 56, 82, 108, 134],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 13, dataCodewordsPerBlock: 115 },\n                    { numBlocks: 3, dataCodewordsPerBlock: 116 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 29, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 42, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 23, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 28, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x209D5,\n        versionNumber: 32,\n        alignmentPatternCenters: [6, 34, 60, 86, 112, 138],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 115 }],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 10, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 23, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 10, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 35, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 19, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 35, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x216F0,\n        versionNumber: 33,\n        alignmentPatternCenters: [6, 30, 58, 86, 114, 142],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 17, dataCodewordsPerBlock: 115 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 116 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 14, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 21, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 29, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 19, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 46, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x228BA,\n        versionNumber: 34,\n        alignmentPatternCenters: [6, 34, 62, 90, 118, 146],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 13, dataCodewordsPerBlock: 115 },\n                    { numBlocks: 6, dataCodewordsPerBlock: 116 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 14, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 23, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 44, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 59, dataCodewordsPerBlock: 16 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 17 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x2379F,\n        versionNumber: 35,\n        alignmentPatternCenters: [6, 30, 54, 78, 102, 126, 150],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 12, dataCodewordsPerBlock: 121 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 122 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 12, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 26, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 39, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 22, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 41, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x24B0B,\n        versionNumber: 36,\n        alignmentPatternCenters: [6, 24, 50, 76, 102, 128, 154],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 121 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 122 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 34, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 46, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 10, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 64, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x2542E,\n        versionNumber: 37,\n        alignmentPatternCenters: [6, 28, 54, 80, 106, 132, 158],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 17, dataCodewordsPerBlock: 122 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 123 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 29, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 49, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 10, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 24, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 46, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x26A64,\n        versionNumber: 38,\n        alignmentPatternCenters: [6, 32, 58, 84, 110, 136, 162],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 122 },\n                    { numBlocks: 18, dataCodewordsPerBlock: 123 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 13, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 32, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 48, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 42, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 32, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x27541,\n        versionNumber: 39,\n        alignmentPatternCenters: [6, 26, 54, 82, 110, 138, 166],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 20, dataCodewordsPerBlock: 117 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 118 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 40, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 43, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 22, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 10, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 67, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x28C69,\n        versionNumber: 40,\n        alignmentPatternCenters: [6, 30, 58, 86, 114, 142, 170],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 19, dataCodewordsPerBlock: 118 },\n                    { numBlocks: 6, dataCodewordsPerBlock: 119 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 18, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 31, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 34, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 34, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 20, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 61, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n];\n\n// tslint:disable:no-bitwise\nfunction numBitsDiffering(x, y) {\n    let z = x ^ y;\n    let bitCount = 0;\n    while (z) {\n        bitCount++;\n        z &= z - 1;\n    }\n    return bitCount;\n}\nfunction pushBit(bit, byte) {\n    return (byte << 1) | bit;\n}\n// tslint:enable:no-bitwise\nconst FORMAT_INFO_TABLE = [\n    { bits: 0x5412, formatInfo: { errorCorrectionLevel: 1, dataMask: 0 } },\n    { bits: 0x5125, formatInfo: { errorCorrectionLevel: 1, dataMask: 1 } },\n    { bits: 0x5E7C, formatInfo: { errorCorrectionLevel: 1, dataMask: 2 } },\n    { bits: 0x5B4B, formatInfo: { errorCorrectionLevel: 1, dataMask: 3 } },\n    { bits: 0x45F9, formatInfo: { errorCorrectionLevel: 1, dataMask: 4 } },\n    { bits: 0x40CE, formatInfo: { errorCorrectionLevel: 1, dataMask: 5 } },\n    { bits: 0x4F97, formatInfo: { errorCorrectionLevel: 1, dataMask: 6 } },\n    { bits: 0x4AA0, formatInfo: { errorCorrectionLevel: 1, dataMask: 7 } },\n    { bits: 0x77C4, formatInfo: { errorCorrectionLevel: 0, dataMask: 0 } },\n    { bits: 0x72F3, formatInfo: { errorCorrectionLevel: 0, dataMask: 1 } },\n    { bits: 0x7DAA, formatInfo: { errorCorrectionLevel: 0, dataMask: 2 } },\n    { bits: 0x789D, formatInfo: { errorCorrectionLevel: 0, dataMask: 3 } },\n    { bits: 0x662F, formatInfo: { errorCorrectionLevel: 0, dataMask: 4 } },\n    { bits: 0x6318, formatInfo: { errorCorrectionLevel: 0, dataMask: 5 } },\n    { bits: 0x6C41, formatInfo: { errorCorrectionLevel: 0, dataMask: 6 } },\n    { bits: 0x6976, formatInfo: { errorCorrectionLevel: 0, dataMask: 7 } },\n    { bits: 0x1689, formatInfo: { errorCorrectionLevel: 3, dataMask: 0 } },\n    { bits: 0x13BE, formatInfo: { errorCorrectionLevel: 3, dataMask: 1 } },\n    { bits: 0x1CE7, formatInfo: { errorCorrectionLevel: 3, dataMask: 2 } },\n    { bits: 0x19D0, formatInfo: { errorCorrectionLevel: 3, dataMask: 3 } },\n    { bits: 0x0762, formatInfo: { errorCorrectionLevel: 3, dataMask: 4 } },\n    { bits: 0x0255, formatInfo: { errorCorrectionLevel: 3, dataMask: 5 } },\n    { bits: 0x0D0C, formatInfo: { errorCorrectionLevel: 3, dataMask: 6 } },\n    { bits: 0x083B, formatInfo: { errorCorrectionLevel: 3, dataMask: 7 } },\n    { bits: 0x355F, formatInfo: { errorCorrectionLevel: 2, dataMask: 0 } },\n    { bits: 0x3068, formatInfo: { errorCorrectionLevel: 2, dataMask: 1 } },\n    { bits: 0x3F31, formatInfo: { errorCorrectionLevel: 2, dataMask: 2 } },\n    { bits: 0x3A06, formatInfo: { errorCorrectionLevel: 2, dataMask: 3 } },\n    { bits: 0x24B4, formatInfo: { errorCorrectionLevel: 2, dataMask: 4 } },\n    { bits: 0x2183, formatInfo: { errorCorrectionLevel: 2, dataMask: 5 } },\n    { bits: 0x2EDA, formatInfo: { errorCorrectionLevel: 2, dataMask: 6 } },\n    { bits: 0x2BED, formatInfo: { errorCorrectionLevel: 2, dataMask: 7 } },\n];\nconst DATA_MASKS = [\n    (p) => ((p.y + p.x) % 2) === 0,\n    (p) => (p.y % 2) === 0,\n    (p) => p.x % 3 === 0,\n    (p) => (p.y + p.x) % 3 === 0,\n    (p) => (Math.floor(p.y / 2) + Math.floor(p.x / 3)) % 2 === 0,\n    (p) => ((p.x * p.y) % 2) + ((p.x * p.y) % 3) === 0,\n    (p) => ((((p.y * p.x) % 2) + (p.y * p.x) % 3) % 2) === 0,\n    (p) => ((((p.y + p.x) % 2) + (p.y * p.x) % 3) % 2) === 0,\n];\nfunction buildFunctionPatternMask(version) {\n    const dimension = 17 + 4 * version.versionNumber;\n    const matrix = BitMatrix.createEmpty(dimension, dimension);\n    matrix.setRegion(0, 0, 9, 9, true); // Top left finder pattern + separator + format\n    matrix.setRegion(dimension - 8, 0, 8, 9, true); // Top right finder pattern + separator + format\n    matrix.setRegion(0, dimension - 8, 9, 8, true); // Bottom left finder pattern + separator + format\n    // Alignment patterns\n    for (const x of version.alignmentPatternCenters) {\n        for (const y of version.alignmentPatternCenters) {\n            if (!(x === 6 && y === 6 || x === 6 && y === dimension - 7 || x === dimension - 7 && y === 6)) {\n                matrix.setRegion(x - 2, y - 2, 5, 5, true);\n            }\n        }\n    }\n    matrix.setRegion(6, 9, 1, dimension - 17, true); // Vertical timing pattern\n    matrix.setRegion(9, 6, dimension - 17, 1, true); // Horizontal timing pattern\n    if (version.versionNumber > 6) {\n        matrix.setRegion(dimension - 11, 0, 3, 6, true); // Version info, top right\n        matrix.setRegion(0, dimension - 11, 6, 3, true); // Version info, bottom left\n    }\n    return matrix;\n}\nfunction readCodewords(matrix, version, formatInfo) {\n    const dataMask = DATA_MASKS[formatInfo.dataMask];\n    const dimension = matrix.height;\n    const functionPatternMask = buildFunctionPatternMask(version);\n    const codewords = [];\n    let currentByte = 0;\n    let bitsRead = 0;\n    // Read columns in pairs, from right to left\n    let readingUp = true;\n    for (let columnIndex = dimension - 1; columnIndex > 0; columnIndex -= 2) {\n        if (columnIndex === 6) { // Skip whole column with vertical alignment pattern;\n            columnIndex--;\n        }\n        for (let i = 0; i < dimension; i++) {\n            const y = readingUp ? dimension - 1 - i : i;\n            for (let columnOffset = 0; columnOffset < 2; columnOffset++) {\n                const x = columnIndex - columnOffset;\n                if (!functionPatternMask.get(x, y)) {\n                    bitsRead++;\n                    let bit = matrix.get(x, y);\n                    if (dataMask({ y, x })) {\n                        bit = !bit;\n                    }\n                    currentByte = pushBit(bit, currentByte);\n                    if (bitsRead === 8) { // Whole bytes\n                        codewords.push(currentByte);\n                        bitsRead = 0;\n                        currentByte = 0;\n                    }\n                }\n            }\n        }\n        readingUp = !readingUp;\n    }\n    return codewords;\n}\nfunction readVersion(matrix) {\n    const dimension = matrix.height;\n    const provisionalVersion = Math.floor((dimension - 17) / 4);\n    if (provisionalVersion <= 6) { // 6 and under dont have version info in the QR code\n        return VERSIONS[provisionalVersion - 1];\n    }\n    let topRightVersionBits = 0;\n    for (let y = 5; y >= 0; y--) {\n        for (let x = dimension - 9; x >= dimension - 11; x--) {\n            topRightVersionBits = pushBit(matrix.get(x, y), topRightVersionBits);\n        }\n    }\n    let bottomLeftVersionBits = 0;\n    for (let x = 5; x >= 0; x--) {\n        for (let y = dimension - 9; y >= dimension - 11; y--) {\n            bottomLeftVersionBits = pushBit(matrix.get(x, y), bottomLeftVersionBits);\n        }\n    }\n    let bestDifference = Infinity;\n    let bestVersion;\n    for (const version of VERSIONS) {\n        if (version.infoBits === topRightVersionBits || version.infoBits === bottomLeftVersionBits) {\n            return version;\n        }\n        let difference = numBitsDiffering(topRightVersionBits, version.infoBits);\n        if (difference < bestDifference) {\n            bestVersion = version;\n            bestDifference = difference;\n        }\n        difference = numBitsDiffering(bottomLeftVersionBits, version.infoBits);\n        if (difference < bestDifference) {\n            bestVersion = version;\n            bestDifference = difference;\n        }\n    }\n    // We can tolerate up to 3 bits of error since no two version info codewords will\n    // differ in less than 8 bits.\n    if (bestDifference <= 3) {\n        return bestVersion;\n    }\n}\nfunction readFormatInformation(matrix) {\n    let topLeftFormatInfoBits = 0;\n    for (let x = 0; x <= 8; x++) {\n        if (x !== 6) { // Skip timing pattern bit\n            topLeftFormatInfoBits = pushBit(matrix.get(x, 8), topLeftFormatInfoBits);\n        }\n    }\n    for (let y = 7; y >= 0; y--) {\n        if (y !== 6) { // Skip timing pattern bit\n            topLeftFormatInfoBits = pushBit(matrix.get(8, y), topLeftFormatInfoBits);\n        }\n    }\n    const dimension = matrix.height;\n    let topRightBottomRightFormatInfoBits = 0;\n    for (let y = dimension - 1; y >= dimension - 7; y--) { // bottom left\n        topRightBottomRightFormatInfoBits = pushBit(matrix.get(8, y), topRightBottomRightFormatInfoBits);\n    }\n    for (let x = dimension - 8; x < dimension; x++) { // top right\n        topRightBottomRightFormatInfoBits = pushBit(matrix.get(x, 8), topRightBottomRightFormatInfoBits);\n    }\n    let bestDifference = Infinity;\n    let bestFormatInfo = null;\n    for (const { bits, formatInfo } of FORMAT_INFO_TABLE) {\n        if (bits === topLeftFormatInfoBits || bits === topRightBottomRightFormatInfoBits) {\n            return formatInfo;\n        }\n        let difference = numBitsDiffering(topLeftFormatInfoBits, bits);\n        if (difference < bestDifference) {\n            bestFormatInfo = formatInfo;\n            bestDifference = difference;\n        }\n        if (topLeftFormatInfoBits !== topRightBottomRightFormatInfoBits) { // also try the other option\n            difference = numBitsDiffering(topRightBottomRightFormatInfoBits, bits);\n            if (difference < bestDifference) {\n                bestFormatInfo = formatInfo;\n                bestDifference = difference;\n            }\n        }\n    }\n    // Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits differing means we found a match\n    if (bestDifference <= 3) {\n        return bestFormatInfo;\n    }\n    return null;\n}\nfunction getDataBlocks(codewords, version, ecLevel) {\n    const ecInfo = version.errorCorrectionLevels[ecLevel];\n    const dataBlocks = [];\n    let totalCodewords = 0;\n    ecInfo.ecBlocks.forEach(block => {\n        for (let i = 0; i < block.numBlocks; i++) {\n            dataBlocks.push({ numDataCodewords: block.dataCodewordsPerBlock, codewords: [] });\n            totalCodewords += block.dataCodewordsPerBlock + ecInfo.ecCodewordsPerBlock;\n        }\n    });\n    // In some cases the QR code will be malformed enough that we pull off more or less than we should.\n    // If we pull off less there's nothing we can do.\n    // If we pull off more we can safely truncate\n    if (codewords.length < totalCodewords) {\n        return null;\n    }\n    codewords = codewords.slice(0, totalCodewords);\n    const shortBlockSize = ecInfo.ecBlocks[0].dataCodewordsPerBlock;\n    // Pull codewords to fill the blocks up to the minimum size\n    for (let i = 0; i < shortBlockSize; i++) {\n        for (const dataBlock of dataBlocks) {\n            dataBlock.codewords.push(codewords.shift());\n        }\n    }\n    // If there are any large blocks, pull codewords to fill the last element of those\n    if (ecInfo.ecBlocks.length > 1) {\n        const smallBlockCount = ecInfo.ecBlocks[0].numBlocks;\n        const largeBlockCount = ecInfo.ecBlocks[1].numBlocks;\n        for (let i = 0; i < largeBlockCount; i++) {\n            dataBlocks[smallBlockCount + i].codewords.push(codewords.shift());\n        }\n    }\n    // Add the rest of the codewords to the blocks. These are the error correction codewords.\n    while (codewords.length > 0) {\n        for (const dataBlock of dataBlocks) {\n            dataBlock.codewords.push(codewords.shift());\n        }\n    }\n    return dataBlocks;\n}\nfunction decodeMatrix(matrix) {\n    const version = readVersion(matrix);\n    if (!version) {\n        return null;\n    }\n    const formatInfo = readFormatInformation(matrix);\n    if (!formatInfo) {\n        return null;\n    }\n    const codewords = readCodewords(matrix, version, formatInfo);\n    const dataBlocks = getDataBlocks(codewords, version, formatInfo.errorCorrectionLevel);\n    if (!dataBlocks) {\n        return null;\n    }\n    // Count total number of data bytes\n    const totalBytes = dataBlocks.reduce((a, b) => a + b.numDataCodewords, 0);\n    const resultBytes = new Uint8ClampedArray(totalBytes);\n    let resultIndex = 0;\n    for (const dataBlock of dataBlocks) {\n        const correctedBytes = decode$1(dataBlock.codewords, dataBlock.codewords.length - dataBlock.numDataCodewords);\n        if (!correctedBytes) {\n            return null;\n        }\n        for (let i = 0; i < dataBlock.numDataCodewords; i++) {\n            resultBytes[resultIndex++] = correctedBytes[i];\n        }\n    }\n    try {\n        return decode$2(resultBytes, version.versionNumber);\n    }\n    catch (_a) {\n        return null;\n    }\n}\nfunction decode(matrix) {\n    if (matrix == null) {\n        return null;\n    }\n    const result = decodeMatrix(matrix);\n    if (result) {\n        return result;\n    }\n    // Decoding didn't work, try mirroring the QR across the topLeft -> bottomRight line.\n    for (let x = 0; x < matrix.width; x++) {\n        for (let y = x + 1; y < matrix.height; y++) {\n            if (matrix.get(x, y) !== matrix.get(y, x)) {\n                matrix.set(x, y, !matrix.get(x, y));\n                matrix.set(y, x, !matrix.get(y, x));\n            }\n        }\n    }\n    return decodeMatrix(matrix);\n}\n\nfunction squareToQuadrilateral(p1, p2, p3, p4) {\n    const dx3 = p1.x - p2.x + p3.x - p4.x;\n    const dy3 = p1.y - p2.y + p3.y - p4.y;\n    if (dx3 === 0 && dy3 === 0) { // Affine\n        return {\n            a11: p2.x - p1.x,\n            a12: p2.y - p1.y,\n            a13: 0,\n            a21: p3.x - p2.x,\n            a22: p3.y - p2.y,\n            a23: 0,\n            a31: p1.x,\n            a32: p1.y,\n            a33: 1,\n        };\n    }\n    else {\n        const dx1 = p2.x - p3.x;\n        const dx2 = p4.x - p3.x;\n        const dy1 = p2.y - p3.y;\n        const dy2 = p4.y - p3.y;\n        const denominator = dx1 * dy2 - dx2 * dy1;\n        const a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\n        const a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\n        return {\n            a11: p2.x - p1.x + a13 * p2.x,\n            a12: p2.y - p1.y + a13 * p2.y,\n            a13,\n            a21: p4.x - p1.x + a23 * p4.x,\n            a22: p4.y - p1.y + a23 * p4.y,\n            a23,\n            a31: p1.x,\n            a32: p1.y,\n            a33: 1,\n        };\n    }\n}\nfunction quadrilateralToSquare(p1, p2, p3, p4) {\n    // Here, the adjoint serves as the inverse:\n    const sToQ = squareToQuadrilateral(p1, p2, p3, p4);\n    return {\n        a11: sToQ.a22 * sToQ.a33 - sToQ.a23 * sToQ.a32,\n        a12: sToQ.a13 * sToQ.a32 - sToQ.a12 * sToQ.a33,\n        a13: sToQ.a12 * sToQ.a23 - sToQ.a13 * sToQ.a22,\n        a21: sToQ.a23 * sToQ.a31 - sToQ.a21 * sToQ.a33,\n        a22: sToQ.a11 * sToQ.a33 - sToQ.a13 * sToQ.a31,\n        a23: sToQ.a13 * sToQ.a21 - sToQ.a11 * sToQ.a23,\n        a31: sToQ.a21 * sToQ.a32 - sToQ.a22 * sToQ.a31,\n        a32: sToQ.a12 * sToQ.a31 - sToQ.a11 * sToQ.a32,\n        a33: sToQ.a11 * sToQ.a22 - sToQ.a12 * sToQ.a21,\n    };\n}\nfunction times(a, b) {\n    return {\n        a11: a.a11 * b.a11 + a.a21 * b.a12 + a.a31 * b.a13,\n        a12: a.a12 * b.a11 + a.a22 * b.a12 + a.a32 * b.a13,\n        a13: a.a13 * b.a11 + a.a23 * b.a12 + a.a33 * b.a13,\n        a21: a.a11 * b.a21 + a.a21 * b.a22 + a.a31 * b.a23,\n        a22: a.a12 * b.a21 + a.a22 * b.a22 + a.a32 * b.a23,\n        a23: a.a13 * b.a21 + a.a23 * b.a22 + a.a33 * b.a23,\n        a31: a.a11 * b.a31 + a.a21 * b.a32 + a.a31 * b.a33,\n        a32: a.a12 * b.a31 + a.a22 * b.a32 + a.a32 * b.a33,\n        a33: a.a13 * b.a31 + a.a23 * b.a32 + a.a33 * b.a33,\n    };\n}\nfunction extract(image, location) {\n    const qToS = quadrilateralToSquare({ x: 3.5, y: 3.5 }, { x: location.dimension - 3.5, y: 3.5 }, { x: location.dimension - 6.5, y: location.dimension - 6.5 }, { x: 3.5, y: location.dimension - 3.5 });\n    const sToQ = squareToQuadrilateral(location.topLeft, location.topRight, location.alignmentPattern, location.bottomLeft);\n    const transform = times(sToQ, qToS);\n    const matrix = BitMatrix.createEmpty(location.dimension, location.dimension);\n    const mappingFunction = (x, y) => {\n        const denominator = transform.a13 * x + transform.a23 * y + transform.a33;\n        return {\n            x: (transform.a11 * x + transform.a21 * y + transform.a31) / denominator,\n            y: (transform.a12 * x + transform.a22 * y + transform.a32) / denominator,\n        };\n    };\n    for (let y = 0; y < location.dimension; y++) {\n        for (let x = 0; x < location.dimension; x++) {\n            const xValue = x + 0.5;\n            const yValue = y + 0.5;\n            const sourcePixel = mappingFunction(xValue, yValue);\n            matrix.set(x, y, image.get(Math.floor(sourcePixel.x), Math.floor(sourcePixel.y)));\n        }\n    }\n    return {\n        matrix,\n        mappingFunction,\n    };\n}\n\nconst MAX_FINDERPATTERNS_TO_SEARCH = 5;\nconst MIN_QUAD_RATIO = 0.5;\nconst MAX_QUAD_RATIO = 1.5;\nconst distance = (a, b) => Math.sqrt(Math.pow((b.x - a.x), 2) + Math.pow((b.y - a.y), 2));\nfunction sum(values) {\n    return values.reduce((a, b) => a + b);\n}\n// Takes three finder patterns and organizes them into topLeft, topRight, etc\nfunction reorderFinderPatterns(pattern1, pattern2, pattern3) {\n    // Find distances between pattern centers\n    const oneTwoDistance = distance(pattern1, pattern2);\n    const twoThreeDistance = distance(pattern2, pattern3);\n    const oneThreeDistance = distance(pattern1, pattern3);\n    let bottomLeft;\n    let topLeft;\n    let topRight;\n    // Assume one closest to other two is B; A and C will just be guesses at first\n    if (twoThreeDistance >= oneTwoDistance && twoThreeDistance >= oneThreeDistance) {\n        [bottomLeft, topLeft, topRight] = [pattern2, pattern1, pattern3];\n    }\n    else if (oneThreeDistance >= twoThreeDistance && oneThreeDistance >= oneTwoDistance) {\n        [bottomLeft, topLeft, topRight] = [pattern1, pattern2, pattern3];\n    }\n    else {\n        [bottomLeft, topLeft, topRight] = [pattern1, pattern3, pattern2];\n    }\n    // Use cross product to figure out whether bottomLeft (A) and topRight (C) are correct or flipped in relation to topLeft (B)\n    // This asks whether BC x BA has a positive z component, which is the arrangement we want. If it's negative, then\n    // we've got it flipped around and should swap topRight and bottomLeft.\n    if (((topRight.x - topLeft.x) * (bottomLeft.y - topLeft.y)) - ((topRight.y - topLeft.y) * (bottomLeft.x - topLeft.x)) < 0) {\n        [bottomLeft, topRight] = [topRight, bottomLeft];\n    }\n    return { bottomLeft, topLeft, topRight };\n}\n// Computes the dimension (number of modules on a side) of the QR Code based on the position of the finder patterns\nfunction computeDimension(topLeft, topRight, bottomLeft, matrix) {\n    const moduleSize = (sum(countBlackWhiteRun(topLeft, bottomLeft, matrix, 5)) / 7 + // Divide by 7 since the ratio is 1:1:3:1:1\n        sum(countBlackWhiteRun(topLeft, topRight, matrix, 5)) / 7 +\n        sum(countBlackWhiteRun(bottomLeft, topLeft, matrix, 5)) / 7 +\n        sum(countBlackWhiteRun(topRight, topLeft, matrix, 5)) / 7) / 4;\n    if (moduleSize < 1) {\n        throw new Error(\"Invalid module size\");\n    }\n    const topDimension = Math.round(distance(topLeft, topRight) / moduleSize);\n    const sideDimension = Math.round(distance(topLeft, bottomLeft) / moduleSize);\n    let dimension = Math.floor((topDimension + sideDimension) / 2) + 7;\n    switch (dimension % 4) {\n        case 0:\n            dimension++;\n            break;\n        case 2:\n            dimension--;\n            break;\n    }\n    return { dimension, moduleSize };\n}\n// Takes an origin point and an end point and counts the sizes of the black white run from the origin towards the end point.\n// Returns an array of elements, representing the pixel size of the black white run.\n// Uses a variant of http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\nfunction countBlackWhiteRunTowardsPoint(origin, end, matrix, length) {\n    const switchPoints = [{ x: Math.floor(origin.x), y: Math.floor(origin.y) }];\n    const steep = Math.abs(end.y - origin.y) > Math.abs(end.x - origin.x);\n    let fromX;\n    let fromY;\n    let toX;\n    let toY;\n    if (steep) {\n        fromX = Math.floor(origin.y);\n        fromY = Math.floor(origin.x);\n        toX = Math.floor(end.y);\n        toY = Math.floor(end.x);\n    }\n    else {\n        fromX = Math.floor(origin.x);\n        fromY = Math.floor(origin.y);\n        toX = Math.floor(end.x);\n        toY = Math.floor(end.y);\n    }\n    const dx = Math.abs(toX - fromX);\n    const dy = Math.abs(toY - fromY);\n    let error = Math.floor(-dx / 2);\n    const xStep = fromX < toX ? 1 : -1;\n    const yStep = fromY < toY ? 1 : -1;\n    let currentPixel = true;\n    // Loop up until x == toX, but not beyond\n    for (let x = fromX, y = fromY; x !== toX + xStep; x += xStep) {\n        // Does current pixel mean we have moved white to black or vice versa?\n        // Scanning black in state 0,2 and white in state 1, so if we find the wrong\n        // color, advance to next state or end if we are in state 2 already\n        const realX = steep ? y : x;\n        const realY = steep ? x : y;\n        if (matrix.get(realX, realY) !== currentPixel) {\n            currentPixel = !currentPixel;\n            switchPoints.push({ x: realX, y: realY });\n            if (switchPoints.length === length + 1) {\n                break;\n            }\n        }\n        error += dy;\n        if (error > 0) {\n            if (y === toY) {\n                break;\n            }\n            y += yStep;\n            error -= dx;\n        }\n    }\n    const distances = [];\n    for (let i = 0; i < length; i++) {\n        if (switchPoints[i] && switchPoints[i + 1]) {\n            distances.push(distance(switchPoints[i], switchPoints[i + 1]));\n        }\n        else {\n            distances.push(0);\n        }\n    }\n    return distances;\n}\n// Takes an origin point and an end point and counts the sizes of the black white run in the origin point\n// along the line that intersects with the end point. Returns an array of elements, representing the pixel sizes\n// of the black white run. Takes a length which represents the number of switches from black to white to look for.\nfunction countBlackWhiteRun(origin, end, matrix, length) {\n    const rise = end.y - origin.y;\n    const run = end.x - origin.x;\n    const towardsEnd = countBlackWhiteRunTowardsPoint(origin, end, matrix, Math.ceil(length / 2));\n    const awayFromEnd = countBlackWhiteRunTowardsPoint(origin, { x: origin.x - run, y: origin.y - rise }, matrix, Math.ceil(length / 2));\n    const middleValue = towardsEnd.shift() + awayFromEnd.shift() - 1; // Substract one so we don't double count a pixel\n    return awayFromEnd.concat(middleValue).concat(...towardsEnd);\n}\n// Takes in a black white run and an array of expected ratios. Returns the average size of the run as well as the \"error\" -\n// that is the amount the run diverges from the expected ratio\nfunction scoreBlackWhiteRun(sequence, ratios) {\n    const averageSize = sum(sequence) / sum(ratios);\n    let error = 0;\n    ratios.forEach((ratio, i) => {\n        error += Math.pow((sequence[i] - ratio * averageSize), 2);\n    });\n    return { averageSize, error };\n}\n// Takes an X,Y point and an array of sizes and scores the point against those ratios.\n// For example for a finder pattern takes the ratio list of 1:1:3:1:1 and checks horizontal, vertical and diagonal ratios\n// against that.\nfunction scorePattern(point, ratios, matrix) {\n    try {\n        const horizontalRun = countBlackWhiteRun(point, { x: -1, y: point.y }, matrix, ratios.length);\n        const verticalRun = countBlackWhiteRun(point, { x: point.x, y: -1 }, matrix, ratios.length);\n        const topLeftPoint = {\n            x: Math.max(0, point.x - point.y) - 1,\n            y: Math.max(0, point.y - point.x) - 1,\n        };\n        const topLeftBottomRightRun = countBlackWhiteRun(point, topLeftPoint, matrix, ratios.length);\n        const bottomLeftPoint = {\n            x: Math.min(matrix.width, point.x + point.y) + 1,\n            y: Math.min(matrix.height, point.y + point.x) + 1,\n        };\n        const bottomLeftTopRightRun = countBlackWhiteRun(point, bottomLeftPoint, matrix, ratios.length);\n        const horzError = scoreBlackWhiteRun(horizontalRun, ratios);\n        const vertError = scoreBlackWhiteRun(verticalRun, ratios);\n        const diagDownError = scoreBlackWhiteRun(topLeftBottomRightRun, ratios);\n        const diagUpError = scoreBlackWhiteRun(bottomLeftTopRightRun, ratios);\n        const ratioError = Math.sqrt(horzError.error * horzError.error +\n            vertError.error * vertError.error +\n            diagDownError.error * diagDownError.error +\n            diagUpError.error * diagUpError.error);\n        const avgSize = (horzError.averageSize + vertError.averageSize + diagDownError.averageSize + diagUpError.averageSize) / 4;\n        const sizeError = (Math.pow((horzError.averageSize - avgSize), 2) +\n            Math.pow((vertError.averageSize - avgSize), 2) +\n            Math.pow((diagDownError.averageSize - avgSize), 2) +\n            Math.pow((diagUpError.averageSize - avgSize), 2)) / avgSize;\n        return ratioError + sizeError;\n    }\n    catch (_a) {\n        return Infinity;\n    }\n}\nfunction recenterLocation(matrix, p) {\n    let leftX = Math.round(p.x);\n    while (matrix.get(leftX, Math.round(p.y))) {\n        leftX--;\n    }\n    let rightX = Math.round(p.x);\n    while (matrix.get(rightX, Math.round(p.y))) {\n        rightX++;\n    }\n    const x = (leftX + rightX) / 2;\n    let topY = Math.round(p.y);\n    while (matrix.get(Math.round(x), topY)) {\n        topY--;\n    }\n    let bottomY = Math.round(p.y);\n    while (matrix.get(Math.round(x), bottomY)) {\n        bottomY++;\n    }\n    const y = (topY + bottomY) / 2;\n    return { x, y };\n}\nfunction locate(matrix) {\n    const finderPatternQuads = [];\n    let activeFinderPatternQuads = [];\n    const alignmentPatternQuads = [];\n    let activeAlignmentPatternQuads = [];\n    for (let y = 0; y <= matrix.height; y++) {\n        let length = 0;\n        let lastBit = false;\n        let scans = [0, 0, 0, 0, 0];\n        for (let x = -1; x <= matrix.width; x++) {\n            const v = matrix.get(x, y);\n            if (v === lastBit) {\n                length++;\n            }\n            else {\n                scans = [scans[1], scans[2], scans[3], scans[4], length];\n                length = 1;\n                lastBit = v;\n                // Do the last 5 color changes ~ match the expected ratio for a finder pattern? 1:1:3:1:1 of b:w:b:w:b\n                const averageFinderPatternBlocksize = sum(scans) / 7;\n                const validFinderPattern = Math.abs(scans[0] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n                    Math.abs(scans[1] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n                    Math.abs(scans[2] - 3 * averageFinderPatternBlocksize) < 3 * averageFinderPatternBlocksize &&\n                    Math.abs(scans[3] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n                    Math.abs(scans[4] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n                    !v; // And make sure the current pixel is white since finder patterns are bordered in white\n                // Do the last 3 color changes ~ match the expected ratio for an alignment pattern? 1:1:1 of w:b:w\n                const averageAlignmentPatternBlocksize = sum(scans.slice(-3)) / 3;\n                const validAlignmentPattern = Math.abs(scans[2] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n                    Math.abs(scans[3] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n                    Math.abs(scans[4] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n                    v; // Is the current pixel black since alignment patterns are bordered in black\n                if (validFinderPattern) {\n                    // Compute the start and end x values of the large center black square\n                    const endX = x - scans[3] - scans[4];\n                    const startX = endX - scans[2];\n                    const line = { startX, endX, y };\n                    // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n                    // that line as the starting point.\n                    const matchingQuads = activeFinderPatternQuads.filter(q => (startX >= q.bottom.startX && startX <= q.bottom.endX) ||\n                        (endX >= q.bottom.startX && startX <= q.bottom.endX) ||\n                        (startX <= q.bottom.startX && endX >= q.bottom.endX && ((scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\n                            (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO)));\n                    if (matchingQuads.length > 0) {\n                        matchingQuads[0].bottom = line;\n                    }\n                    else {\n                        activeFinderPatternQuads.push({ top: line, bottom: line });\n                    }\n                }\n                if (validAlignmentPattern) {\n                    // Compute the start and end x values of the center black square\n                    const endX = x - scans[4];\n                    const startX = endX - scans[3];\n                    const line = { startX, y, endX };\n                    // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n                    // that line as the starting point.\n                    const matchingQuads = activeAlignmentPatternQuads.filter(q => (startX >= q.bottom.startX && startX <= q.bottom.endX) ||\n                        (endX >= q.bottom.startX && startX <= q.bottom.endX) ||\n                        (startX <= q.bottom.startX && endX >= q.bottom.endX && ((scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\n                            (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO)));\n                    if (matchingQuads.length > 0) {\n                        matchingQuads[0].bottom = line;\n                    }\n                    else {\n                        activeAlignmentPatternQuads.push({ top: line, bottom: line });\n                    }\n                }\n            }\n        }\n        finderPatternQuads.push(...activeFinderPatternQuads.filter(q => q.bottom.y !== y && q.bottom.y - q.top.y >= 2));\n        activeFinderPatternQuads = activeFinderPatternQuads.filter(q => q.bottom.y === y);\n        alignmentPatternQuads.push(...activeAlignmentPatternQuads.filter(q => q.bottom.y !== y));\n        activeAlignmentPatternQuads = activeAlignmentPatternQuads.filter(q => q.bottom.y === y);\n    }\n    finderPatternQuads.push(...activeFinderPatternQuads.filter(q => q.bottom.y - q.top.y >= 2));\n    alignmentPatternQuads.push(...activeAlignmentPatternQuads);\n    // Refactored from cozmo/jsQR to (hopefully) circumvent an issue in Safari 13+ on both Mac and iOS (also including\n    // iOS Chrome and other Safari iOS derivatives). Safari was very occasionally and apparently not deterministically\n    // throwing a \"RangeError: Array size is not a small enough positive integer.\" exception seemingly within the second\n    // .map of the original code (here the second for-loop). This second .map contained a nested .map call over the same\n    // array instance which was the chained result from previous calls to .map, .filter and .sort which potentially caused\n    // this bug in Safari?\n    // Also see https://github.com/cozmo/jsQR/issues/157 and https://bugs.webkit.org/show_bug.cgi?id=211619#c3\n    const scoredFinderPatternPositions = [];\n    for (const quad of finderPatternQuads) {\n        if (quad.bottom.y - quad.top.y < 2) {\n            // All quads must be at least 2px tall since the center square is larger than a block\n            continue;\n        }\n        // calculate quad center\n        const x = (quad.top.startX + quad.top.endX + quad.bottom.startX + quad.bottom.endX) / 4;\n        const y = (quad.top.y + quad.bottom.y + 1) / 2;\n        if (!matrix.get(Math.round(x), Math.round(y))) {\n            continue;\n        }\n        const lengths = [quad.top.endX - quad.top.startX, quad.bottom.endX - quad.bottom.startX, quad.bottom.y - quad.top.y + 1];\n        const size = sum(lengths) / lengths.length;\n        // Initial scoring of finder pattern quads by looking at their ratios, not taking into account position\n        const score = scorePattern({ x: Math.round(x), y: Math.round(y) }, [1, 1, 3, 1, 1], matrix);\n        scoredFinderPatternPositions.push({ score, x, y, size });\n    }\n    if (scoredFinderPatternPositions.length < 3) {\n        // A QR code has 3 finder patterns, therefore we need at least 3 candidates.\n        return null;\n    }\n    scoredFinderPatternPositions.sort((a, b) => a.score - b.score);\n    // Now take the top finder pattern options and try to find 2 other options with a similar size.\n    const finderPatternGroups = [];\n    for (let i = 0; i < Math.min(scoredFinderPatternPositions.length, MAX_FINDERPATTERNS_TO_SEARCH); ++i) {\n        const point = scoredFinderPatternPositions[i];\n        const otherPoints = [];\n        for (const otherPoint of scoredFinderPatternPositions) {\n            if (otherPoint === point) {\n                continue;\n            }\n            otherPoints.push(Object.assign(Object.assign({}, otherPoint), { score: otherPoint.score + (Math.pow((otherPoint.size - point.size), 2)) / point.size }));\n        }\n        otherPoints.sort((a, b) => a.score - b.score);\n        finderPatternGroups.push({\n            points: [point, otherPoints[0], otherPoints[1]],\n            score: point.score + otherPoints[0].score + otherPoints[1].score, // total combined score of the three points in the group\n        });\n    }\n    finderPatternGroups.sort((a, b) => a.score - b.score);\n    const bestFinderPatternGroup = finderPatternGroups[0];\n    const { topRight, topLeft, bottomLeft } = reorderFinderPatterns(...bestFinderPatternGroup.points);\n    const alignment = findAlignmentPattern(matrix, alignmentPatternQuads, topRight, topLeft, bottomLeft);\n    const result = [];\n    if (alignment) {\n        result.push({\n            alignmentPattern: { x: alignment.alignmentPattern.x, y: alignment.alignmentPattern.y },\n            bottomLeft: { x: bottomLeft.x, y: bottomLeft.y },\n            dimension: alignment.dimension,\n            topLeft: { x: topLeft.x, y: topLeft.y },\n            topRight: { x: topRight.x, y: topRight.y },\n        });\n    }\n    // We normally use the center of the quads as the location of the tracking points, which is optimal for most cases and will account\n    // for a skew in the image. However, In some cases, a slight skew might not be real and instead be caused by image compression\n    // errors and/or low resolution. For those cases, we'd be better off centering the point exactly in the middle of the black area. We\n    // compute and return the location data for the naively centered points as it is little additional work and allows for multiple\n    // attempts at decoding harder images.\n    const midTopRight = recenterLocation(matrix, topRight);\n    const midTopLeft = recenterLocation(matrix, topLeft);\n    const midBottomLeft = recenterLocation(matrix, bottomLeft);\n    const centeredAlignment = findAlignmentPattern(matrix, alignmentPatternQuads, midTopRight, midTopLeft, midBottomLeft);\n    if (centeredAlignment) {\n        result.push({\n            alignmentPattern: { x: centeredAlignment.alignmentPattern.x, y: centeredAlignment.alignmentPattern.y },\n            bottomLeft: { x: midBottomLeft.x, y: midBottomLeft.y },\n            topLeft: { x: midTopLeft.x, y: midTopLeft.y },\n            topRight: { x: midTopRight.x, y: midTopRight.y },\n            dimension: centeredAlignment.dimension,\n        });\n    }\n    if (result.length === 0) {\n        return null;\n    }\n    return result;\n}\nfunction findAlignmentPattern(matrix, alignmentPatternQuads, topRight, topLeft, bottomLeft) {\n    // Now that we've found the three finder patterns we can determine the blockSize and the size of the QR code.\n    // We'll use these to help find the alignment pattern but also later when we do the extraction.\n    let dimension;\n    let moduleSize;\n    try {\n        ({ dimension, moduleSize } = computeDimension(topLeft, topRight, bottomLeft, matrix));\n    }\n    catch (e) {\n        return null;\n    }\n    // Now find the alignment pattern\n    const bottomRightFinderPattern = {\n        x: topRight.x - topLeft.x + bottomLeft.x,\n        y: topRight.y - topLeft.y + bottomLeft.y,\n    };\n    const modulesBetweenFinderPatterns = ((distance(topLeft, bottomLeft) + distance(topLeft, topRight)) / 2 / moduleSize);\n    const correctionToTopLeft = 1 - (3 / modulesBetweenFinderPatterns);\n    const expectedAlignmentPattern = {\n        x: topLeft.x + correctionToTopLeft * (bottomRightFinderPattern.x - topLeft.x),\n        y: topLeft.y + correctionToTopLeft * (bottomRightFinderPattern.y - topLeft.y),\n    };\n    const alignmentPatterns = alignmentPatternQuads\n        .map(q => {\n        const x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\n        const y = (q.top.y + q.bottom.y + 1) / 2;\n        if (!matrix.get(Math.floor(x), Math.floor(y))) {\n            return;\n        }\n        const sizeScore = scorePattern({ x: Math.floor(x), y: Math.floor(y) }, [1, 1, 1], matrix);\n        const score = sizeScore + distance({ x, y }, expectedAlignmentPattern);\n        return { x, y, score };\n    })\n        .filter(v => !!v)\n        .sort((a, b) => a.score - b.score);\n    // If there are less than 15 modules between finder patterns it's a version 1 QR code and as such has no alignmemnt pattern\n    // so we can only use our best guess.\n    const alignmentPattern = modulesBetweenFinderPatterns >= 15 && alignmentPatterns.length ? alignmentPatterns[0] : expectedAlignmentPattern;\n    return { alignmentPattern, dimension };\n}\n\nfunction scan(matrix) {\n    const locations = locate(matrix);\n    if (!locations) {\n        return null;\n    }\n    for (const location of locations) {\n        const extracted = extract(matrix, location);\n        const decoded = decode(extracted.matrix);\n        if (decoded) {\n            return {\n                binaryData: decoded.bytes,\n                data: decoded.text,\n                chunks: decoded.chunks,\n                version: decoded.version,\n                location: {\n                    topRightCorner: extracted.mappingFunction(location.dimension, 0),\n                    topLeftCorner: extracted.mappingFunction(0, 0),\n                    bottomRightCorner: extracted.mappingFunction(location.dimension, location.dimension),\n                    bottomLeftCorner: extracted.mappingFunction(0, location.dimension),\n                    topRightFinderPattern: location.topRight,\n                    topLeftFinderPattern: location.topLeft,\n                    bottomLeftFinderPattern: location.bottomLeft,\n                    bottomRightAlignmentPattern: location.alignmentPattern,\n                },\n                matrix: extracted.matrix,\n            };\n        }\n    }\n    return null;\n}\nconst defaultOptions = {\n    inversionAttempts: \"attemptBoth\",\n    greyScaleWeights: {\n        red: 0.2126,\n        green: 0.7152,\n        blue: 0.0722,\n        useIntegerApproximation: false,\n    },\n    canOverwriteImage: true,\n};\nfunction mergeObject(target, src) {\n    Object.keys(src).forEach(opt => {\n        target[opt] = src[opt];\n    });\n}\nfunction jsQR(data, width, height, providedOptions = {}) {\n    const options = Object.create(null);\n    mergeObject(options, defaultOptions);\n    mergeObject(options, providedOptions);\n    const tryInvertedFirst = options.inversionAttempts === \"onlyInvert\" || options.inversionAttempts === \"invertFirst\";\n    const shouldInvert = options.inversionAttempts === \"attemptBoth\" || tryInvertedFirst;\n    const { binarized, inverted } = binarize(data, width, height, shouldInvert, options.greyScaleWeights, options.canOverwriteImage);\n    let result = scan(tryInvertedFirst ? inverted : binarized);\n    if (!result && (options.inversionAttempts === \"attemptBoth\" || options.inversionAttempts === \"invertFirst\")) {\n        result = scan(tryInvertedFirst ? binarized : inverted);\n    }\n    return result;\n}\njsQR.default = jsQR;\n\nexport { jsQR as default };\n//# sourceMappingURL=jsQR.js.map\n","export function blobToImageData(blob: Blob): Promise<ImageData> {\n  const blobUrl = URL.createObjectURL(blob);\n  const img = new Image();\n\n  return new Promise<void>((resolve, reject) => {\n    img.onload = () => resolve();\n    img.onerror = err => reject(err);\n    img.src = blobUrl;\n  }).then(() => {\n    URL.revokeObjectURL(blobUrl);\n    const canvas = document.createElement('canvas');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(img, 0, 0);\n    return ctx.getImageData(0, 0, canvas.width, canvas.height);\n  });\n}\n\nexport function canvasImageSourceToImageData(\n  img: CanvasImageSource,\n): ImageData {\n  const canvas = document.createElement('canvas');\n  if (img instanceof HTMLVideoElement) {\n    canvas.width = img.videoWidth;\n    canvas.height = img.videoHeight;\n  } else if (img instanceof SVGImageElement) {\n    canvas.width = img.width.baseVal.value;\n    canvas.height = img.height.baseVal.value;\n  } else {\n    canvas.width = img.width;\n    canvas.height = img.height;\n  }\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(img, 0, 0);\n  return ctx.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n// This QR code is used to check if the built-in BarcodeDetector is functioning properly. This QR code is 23x23 and decodes to \"ABC\".\n// Google Chrome on macOS on the M1 processor is broken. https://bugs.chromium.org/p/chromium/issues/detail?id=1382442\nexport function testQrCode(): ImageData {\n  const data =\nn  const byteArray = new Uint8ClampedArray(2116); // 23*23*4\n  for (let i = 0; i < data.length; i++) {\n    const value = data[i] === '1' ? 0 : 255;\n    byteArray[4 * i + 0] = value;\n    byteArray[4 * i + 1] = value;\n    byteArray[4 * i + 2] = value;\n    byteArray[4 * i + 3] = 255;\n  }\n  return new ImageData(byteArray, 23, 23);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import jsQR from 'jsqr-es6';\n\nimport type {\n  BarcodeDetector,\n  BarcodeDetectorOptions,\n  BarcodeFormat,\n  DetectedBarcode,\n} from './BarcodeDetector';\nimport {\n  blobToImageData,\n  canvasImageSourceToImageData,\n  testQrCode,\n} from './utils';\n\nexport default class QrDetector implements BarcodeDetector {\n  _nativeDetectorSupported: boolean | undefined = undefined;\n  barcodeDetector: BarcodeDetector | undefined = undefined;\n\n  constructor(barcodeDetectorOptions?: BarcodeDetectorOptions) {\n    if ((self as any).BarcodeDetector) {\n      this.barcodeDetector = new (self as any).BarcodeDetector(\n        barcodeDetectorOptions,\n      );\n    }\n  }\n\n  async detect(image: ImageBitmapSource): Promise<DetectedBarcode[]> {\n    if (\n      this._nativeDetectorSupported ||\n      (await this.nativeDetectorSupported())\n    ) {\n      return this.barcodeDetector.detect(image);\n    }\n\n    // Fall back to jsQR\n    if (image instanceof ImageData) {\n    } else if (image instanceof Blob) {\n      image = await blobToImageData(image);\n    } else {\n      image = canvasImageSourceToImageData(image);\n    }\n    if (!(image instanceof ImageData)) {\n      throw Error('The image is not provided in a supported format.');\n    }\n\n    const result = jsQR(image.data, image.width, image.height);\n    if (!result || result.data === '') {\n      // For some reason, jsQR can sometimes return an invalid result with an empty string. Probably a bug in jsQR?\n      return [];\n    }\n\n    const minX = Math.min(\n      result.location.topLeftCorner.x,\n      result.location.topRightCorner.x,\n      result.location.bottomRightCorner.x,\n      result.location.bottomLeftCorner.x,\n    );\n    const minY = Math.min(\n      result.location.topLeftCorner.y,\n      result.location.topRightCorner.y,\n      result.location.bottomRightCorner.y,\n      result.location.bottomLeftCorner.y,\n    );\n    const maxX = Math.max(\n      result.location.topLeftCorner.x,\n      result.location.topRightCorner.x,\n      result.location.bottomRightCorner.x,\n      result.location.bottomLeftCorner.x,\n    );\n    const maxY = Math.max(\n      result.location.topLeftCorner.y,\n      result.location.topRightCorner.y,\n      result.location.bottomRightCorner.y,\n      result.location.bottomLeftCorner.y,\n    );\n\n    return [\n      {\n        format: 'qr_code',\n        rawValue: result.data,\n        boundingBox: new DOMRectReadOnly(minX, minY, maxX - minX, maxY - minY),\n        cornerPoints: [\n          result.location.topLeftCorner,\n          result.location.topRightCorner,\n          result.location.bottomRightCorner,\n          result.location.bottomLeftCorner,\n        ],\n      },\n    ];\n  }\n\n  static async getSupportedFormats(): Promise<BarcodeFormat[]> {\n    return ['qr_code'];\n  }\n\n  async nativeDetectorSupported(): Promise<boolean> {\n    if (this._nativeDetectorSupported === undefined) {\n      if ((self as any).BarcodeDetector) {\n        const supportedFormats = await (\n          self as any\n        ).BarcodeDetector.getSupportedFormats();\n        if (supportedFormats.includes('qr_code')) {\n          // Double check that the native BarcodeDetector isn't broken by decoding a test QR code. https://bugs.chromium.org/p/chromium/issues/detail?id=1382442\n          const testResult = await this.barcodeDetector.detect(testQrCode());\n          if (testResult.length === 1 && testResult[0].rawValue === 'ABC') {\n            this._nativeDetectorSupported = true;\n            return true;\n          }\n        }\n      }\n      this._nativeDetectorSupported = false;\n    }\n    return this._nativeDetectorSupported;\n  }\n}\n"],"names":["BitMatrix","constructor","data","width","this","height","length","static","Uint8ClampedArray","get","x","y","set","v","setRegion","left","top","numBetween","value","min","max","Matrix","buffer","bufferSize","Error","BitStream","bytes","byteOffset","bitOffset","readBits","numBits","available","toString","result","bitsLeft","toRead","bitsToNotRead","mask","Mode","ModeByte","decodeNumeric","stream","size","text","characterCountSize","num","a","Math","floor","b","c","push","AlphanumericCharacterCodes","decodeAlphanumeric","charCodeAt","decodeByte","i","decodeURIComponent","map","substr","join","_a","decodeKanji","k","TextDecoder","decode","Uint8Array","from","GenericGFPoly","field","coefficients","coefficientsLength","firstNonZero","zero","degree","isZero","getCoefficient","addOrSubtract","other","smallerCoefficients","largerCoefficients","sumDiff","lengthDiff","addOrSubtractGF","multiply","scalar","product","multiplyPoly","aCoefficients","aLength","bCoefficients","bLength","aCoeff","j","multiplyByMonomial","coefficient","evaluateAt","forEach","GenericGF","primitive","genBase","generatorBase","expTable","Array","logTable","one","inverse","buildMonomial","log","exp","decode$1","twoS","outputBytes","poly","syndromeCoefficients","error","s","evaluation","syndrome","sigmaOmega","R","rLast","r","tLast","t","rLastLast","tLastLast","q","denominatorLeadingTerm","dltInverse","degreeDiff","scale","sigmaTildeAtZero","runEuclideanAlgorithm","errorLocations","errorLocator","numErrors","errorCount","findErrorLocations","errorMagnitudes","errorEvaluator","xiInverse","denominator","findErrorMagnitudes","position","VERSIONS","infoBits","versionNumber","alignmentPatternCenters","errorCorrectionLevels","ecCodewordsPerBlock","ecBlocks","numBlocks","dataCodewordsPerBlock","numBitsDiffering","z","bitCount","pushBit","bit","byte","FORMAT_INFO_TABLE","bits","formatInfo","errorCorrectionLevel","dataMask","DATA_MASKS","p","decodeMatrix","matrix","version","dimension","provisionalVersion","topRightVersionBits","bottomLeftVersionBits","bestVersion","bestDifference","Infinity","difference","readVersion","topLeftFormatInfoBits","topRightBottomRightFormatInfoBits","bestFormatInfo","readFormatInformation","dataBlocks","codewords","ecLevel","ecInfo","totalCodewords","block","numDataCodewords","slice","shortBlockSize","dataBlock","shift","smallBlockCount","largeBlockCount","getDataBlocks","functionPatternMask","createEmpty","buildFunctionPatternMask","currentByte","bitsRead","readingUp","columnIndex","columnOffset","readCodewords","totalBytes","reduce","resultBytes","resultIndex","correctedBytes","chunks","mode","Terminator","ECI","type","assignmentNumber","Numeric","numericResult","Alphanumeric","alphanumericResult","Byte","byteResult","Kanji","kanjiResult","StructuredAppend","currentSequence","totalSequence","parity","decode$2","squareToQuadrilateral","p1","p2","p3","p4","dx3","dy3","a11","a12","a13","a21","a22","a23","a31","a32","a33","dx1","dx2","dy1","dy2","extract","image","location","qToS","sToQ","quadrilateralToSquare","transform","topLeft","topRight","alignmentPattern","bottomLeft","mappingFunction","sourcePixel","distance","sqrt","pow","sum","values","countBlackWhiteRunTowardsPoint","origin","end","switchPoints","steep","abs","fromX","fromY","toX","toY","dx","dy","xStep","yStep","currentPixel","realX","realY","distances","countBlackWhiteRun","rise","run","towardsEnd","ceil","awayFromEnd","middleValue","concat","scoreBlackWhiteRun","sequence","ratios","averageSize","ratio","scorePattern","point","horizontalRun","verticalRun","topLeftBottomRightRun","bottomLeftTopRightRun","horzError","vertError","diagDownError","diagUpError","ratioError","avgSize","recenterLocation","leftX","round","rightX","topY","bottomY","findAlignmentPattern","alignmentPatternQuads","moduleSize","topDimension","sideDimension","computeDimension","e","bottomRightFinderPattern","modulesBetweenFinderPatterns","correctionToTopLeft","expectedAlignmentPattern","alignmentPatterns","startX","endX","bottom","score","filter","sort","scan","locations","finderPatternQuads","activeFinderPatternQuads","activeAlignmentPatternQuads","lastBit","scans","averageFinderPatternBlocksize","validFinderPattern","averageAlignmentPatternBlocksize","validAlignmentPattern","line","matchingQuads","scoredFinderPatternPositions","quad","lengths","finderPatternGroups","otherPoints","otherPoint","Object","assign","points","bestFinderPatternGroup","pattern1","pattern2","pattern3","oneTwoDistance","twoThreeDistance","oneThreeDistance","reorderFinderPatterns","alignment","midTopRight","midTopLeft","midBottomLeft","centeredAlignment","locate","extracted","decoded","binaryData","topRightCorner","topLeftCorner","bottomRightCorner","bottomLeftCorner","topRightFinderPattern","topLeftFinderPattern","bottomLeftFinderPattern","bottomRightAlignmentPattern","defaultOptions","inversionAttempts","greyScaleWeights","red","green","blue","useIntegerApproximation","canOverwriteImage","mergeObject","target","src","keys","opt","jsQR","providedOptions","options","create","tryInvertedFirst","shouldInvert","binarized","inverted","returnInverted","greyscaleWeights","pixelCount","greyscaleBuffer","bufferOffset","greyscalePixels","pixelPosition","g","horizontalRegionCount","verticalRegionCount","blackPointsCount","blackPointsBuffer","blackPoints","verticalRegion","hortizontalRegion","pixelLumosity","average","blackBias","averageNeighborBlackPoint","binarizedBuffer","invertedBuffer","xRegion","yRegion","threshold","lum","binarize","default","blob","blobUrl","URL","createObjectURL","img","Image","Promise","resolve","reject","onload","onerror","err","then","revokeObjectURL","canvas","document","createElement","ctx","getContext","drawImage","getImageData","HTMLVideoElement","videoWidth","videoHeight","SVGImageElement","baseVal","byteArray","ImageData","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","barcodeDetectorOptions","_nativeDetectorSupported","barcodeDetector","self","BarcodeDetector","async","nativeDetectorSupported","detect","Blob","blobToImageData","canvasImageSourceToImageData","minX","minY","maxX","maxY","format","rawValue","boundingBox","DOMRectReadOnly","cornerPoints","getSupportedFormats","includes","testResult","testQrCode"],"sourceRoot":""}